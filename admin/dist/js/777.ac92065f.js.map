{"version":3,"file":"js/777.ac92065f.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./node_modules/turndown/lib/turndown.browser.es.js"],"sourcesContent":["function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (window.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))[\\s\\S]*?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n"],"names":["extend","destination","i","arguments","length","source","key","hasOwnProperty","repeat","character","count","Array","join","trimLeadingNewlines","string","replace","trimTrailingNewlines","indexEnd","substring","blockElements","isBlock","node","is","voidElements","isVoid","hasVoid","has","meaningfulWhenBlankElements","isMeaningfulWhenBlank","hasMeaningfulWhenBlank","tagNames","indexOf","nodeName","getElementsByTagName","some","tagName","rules","cleanAttribute","attribute","Rules","options","this","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","push","findRule","rule","filterValue","filter","toLowerCase","isArray","TypeError","call","collapseWhitespace","element","isPre","firstChild","prevText","keepLeadingWs","prev","next","nodeType","text","data","test","substr","remove","nextNode","nextSibling","parentNode","removeChild","current","paragraph","content","lineBreak","br","heading","hLevel","Number","charAt","headingStyle","underline","blockquote","list","parent","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","index","prototype","children","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","match","className","language","code","fenceChar","fence","fenceSize","fenceInCodeRegex","RegExp","exec","horizontalRule","hr","inlineLink","linkStyle","href","title","referenceLink","reference","linkReferenceStyle","id","references","append","emphasis","trim","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","delimiter","matches","image","alt","src","titlePart","add","unshift","keep","forNode","isBlank","forEach","fn","root","window","canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","e","createHTMLParser","shouldUseActiveX","doc","ActiveXObject","designMode","open","write","close","document","implementation","createHTMLDocument","useActiveX","_htmlParser","HTMLParser","RootNode","input","htmlParser","getElementById","cloneNode","preformattedCode","isPreOrCode","Node","isCode","flankingWhitespace","leading","trailing","edges","edgeWhitespace","leadingAscii","isFlankedByWhitespace","leadingNonAscii","trailingAscii","trailingNonAscii","m","side","sibling","regExp","isFlanked","nodeValue","reduce","escapes","TurndownService","defaults","outerHTML","process","self","childNodes","output","escape","replacementForNode","postProcess","whitespace","s1","s2","nls","Math","max","separator","canConvert","turndown","use","plugin","addRule","accumulator"],"sourceRoot":""}