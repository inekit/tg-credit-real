{"version":3,"file":"js/477.270336de.js","mappings":"0JAAA,IAAIA,EAAU,CACZC,KAAM,UACNC,MAAO,OACPC,IAAK,WAGPC,EAAOC,QAAU,CACfC,cAAgBC,GACP,IAAIC,KAAKD,GAAME,mBAAmB,QAAST,GAEpDU,UAAUC,GACR,OAAOA,EAAS,GAAM,GAAEC,KAAKC,MAAMF,EAAS,WAAWA,EAAS,aAAgB,GAAEA,WACpF,E,qGCCqBG,MAAM,gB,uBAaNA,MAAM,oD,kbAzB3BC,EAAAA,EAAAA,IA0COC,EAAAA,KAAAA,C,kBAzCL,IAwCO,EAxCPD,EAAAA,EAAAA,IAwCOE,EAAAA,CAxCAC,GAAI,IAAE,C,kBACX,IAsCQ,EAtCRH,EAAAA,EAAAA,IAsCQI,EAAAA,CAtCDL,MAAM,QAAM,C,kBACjB,IAAuC,EAAvCC,EAAAA,EAAAA,IAAuCK,EAAAA,KAAAA,C,kBAAzB,IAAU,mBAAPC,EAAAA,MAAI,M,OACrBN,EAAAA,EAAAA,IAmCYO,EAAAA,KAAAA,C,kBAlCV,IAiCS,EAjCTP,EAAAA,EAAAA,IAiCSQ,EAAAA,CAjCDC,MAAM,SAASV,MAAM,cAAcW,MAAA,GAAMC,WAAA,I,mBAC/C,IAWa,EAXbX,EAAAA,EAAAA,IAWaY,EAAAA,CAXDC,MAAM,SAAO,C,kBACvB,IASY,EATZb,EAAAA,EAAAA,IASYc,EAAAA,KAAAA,C,kBARQ,IAAoC,gBAAtDC,EAAAA,EAAAA,IAMmBC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IANcC,EAAAA,mBAARC,K,WAAzBC,EAAAA,EAAAA,IAMmBC,EAAAA,CANqCC,IAAKH,EAAEI,KAAO,SAAUvB,OAAK,SAAC,cAAa,CACxFmB,EAAEK,MAAQ,YAAc,GAAuBL,EAAEI,OAASL,EAAAA,aAAY,cAA+C,IAATA,EAAAA,WAAsBC,EAAEI,OAASL,EAAAA,aAAY,aAEnGO,QAAK,GAAEC,EAAAA,YAAYP,I,mBAClF,IAAsF,EAAtFQ,EAAAA,EAAAA,GAAsF,MAAtFC,EAAsF,EAA5DD,EAAAA,EAAAA,GAAsD,OAAhDE,IAAKC,EAAQ,M,qBAAyC,KACtF,QAAGX,EAAEY,OAAK,M,yCAEZ9B,EAAAA,EAAAA,IAAiEoB,EAAAA,CAA/CrB,MAAM,eAAa,C,kBAAC,IAAQ,UAAR,e,yBAG1CC,EAAAA,EAAAA,IAmBa+B,EAAAA,KAAAA,C,kBAlBA,IAAmD,gBAA9DhB,EAAAA,EAAAA,IAgBYC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAhB2BS,EAAAA,cAAcnB,EAAAA,OAAI,CAAnC0B,EAAKC,M,WAA3Bd,EAAAA,EAAAA,IAgBYL,EAAAA,CAhBoDO,IAAKY,EAAI,O,mBACvD,IAAsC,gBAAtDlB,EAAAA,EAAAA,IAGiBC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAH8BgB,GAAG,CAAvBE,EAAQC,M,WAAnChB,EAAAA,EAAAA,IAGiBiB,EAAAA,CAHuCf,IAAKc,EAAI,MAAOpC,MAAM,e,mBAC5E,IAAoF,CAAlEkB,EAAAA,aAAeX,EAAAA,KAAK2B,IAAII,KAAE,WAA5ClB,EAAAA,EAAAA,IAAoFmB,EAAAA,C,iBAA7BrB,EAAAA,SAASX,EAAAA,OAAO6B,IAAIb,M,yBAApBL,EAAAA,SAASX,EAAAA,OAAO6B,IAAIb,MAAI,G,2DAC/EP,EAAAA,EAAAA,IAAgC,kBAAhBmB,GAAM,O,qBAExBlC,EAAAA,EAAAA,IAUiBoC,EAAAA,KAAAA,C,kBATf,IAQM,EARNV,EAAAA,EAAAA,GAQM,MARNa,EAQM,CAPWtB,EAAAA,aAAeX,EAAAA,KAAK2B,IAAII,KAAE,WAAzClB,EAAAA,EAAAA,IACqBqB,EAAAA,C,MADuB3B,MAAO,UAAW4B,KAAK,KAAMjB,QAAK,GAAEC,EAAAA,QAAQQ,I,mBAAI,IACjF,UADiF,iB,wCAE7EhB,EAAAA,aAAeX,EAAAA,KAAK2B,IAAII,KAAE,WAAzClB,EAAAA,EAAAA,IACoBqB,EAAAA,C,MADwB3B,MAAO,QAAS4B,KAAK,KAAMjB,QAAK,eAAEP,EAAAA,YAAa,I,mBAAO,IACxF,UADwF,gB,sBAElGF,EAAAA,EAAAA,IAEUC,EAAAA,GAAAA,CAAAK,IAAAA,IAAA,QAFsCf,EAAAA,SAAO,CAA5BoC,EAAMpB,M,WAAjCH,EAAAA,EAAAA,IAEUqB,EAAAA,CAFmDnB,IAAKC,EAAO,SACtET,MAAO6B,GAAM7B,MAAO4B,KAAK,KAAMjB,QAAK,GAAEC,EAAAA,aAAaH,EAAMoB,EAAMT,EAAGU,EAAAA,EAAGA,EAAAA,S,mBAAS,IAAU,mBAAPrB,GAAI,M,gFAK9FtB,EAAAA,EAAAA,IAAwBc,M,oDAOpCd,EAAAA,EAAAA,IAMc4C,EAAAA,CAND,aAAW,2BAAyB,C,kBAC/C,IAAoF,CAA7DtC,EAAAA,iBAAc,WAArCa,EAAAA,EAAAA,IAAoF0B,EAAAA,C,MAA5CrB,QAAOC,EAAAA,W,mBAAW,IAAQ,UAAR,e,sCAC1DzB,EAAAA,EAAAA,IAA8D6C,EAAAA,CAA5CrB,QAAOC,EAAAA,cAAY,C,kBAAE,IAAK,UAAL,Y,qBACvCzB,EAAAA,EAAAA,IAAsD6C,EAAAA,CAArCC,SAAA,IAAQ,C,kBAAC,IAAU,mBAAP7B,EAAAA,MAAI,M,OACjCjB,EAAAA,EAAAA,IAA2D6C,EAAAA,CAAzCrB,QAAOC,EAAAA,UAAQ,C,kBAAE,IAAM,UAAN,a,oBACZnB,EAAAA,iBAAc,WAArCa,EAAAA,EAAAA,IAAkF0B,EAAAA,C,MAA1CrB,QAAOC,EAAAA,U,mBAAU,IAAO,UAAP,c,yEAO7D,GACEsB,MAAO,CACLzB,KAAM,CACJ0B,KAAMC,QAERC,OAAQ,GACRC,QAAS,GACTC,KAAM,GACNC,SAAU,CACRL,KAAMM,SACNC,QAAS,QAEXC,UAAW,CACTR,KAAMM,SACNC,QAAS,QAEXE,SAAU,CACRT,KAAMC,OACNM,QAAS,UAEXG,eAAgBC,OAChBC,aAAcN,UAEhBO,OACE,MAAO,CACLC,kBAAmB,GACnBC,QAAS,GACTC,KAAM,EACNC,YAAY,EACZC,SAAU,CAAC,EACXC,WAAW,EACXC,aAAc,KAElB,EACAC,gBACEC,KAAKR,kBAAoBQ,KAAKpB,OAAOqB,KAAKC,IACtB,kBAAPA,EAAiBA,EAAG1C,MAAQ0C,EAAG1C,OAAS0C,EAAGlD,KACjDkD,EAAK,CAAElD,KAAMkD,GACXA,WAGHF,KAAKjB,SAASiB,KAAKP,QAASO,KAAKN,KAAMM,KAAKF,aAAcE,KAAKH,iBAC/DG,KAAKV,cACb,EACAa,QAAS,CACPlF,cAAa,gBACbmF,aAAapD,EAAMoB,EAAMiC,GAClBjC,IACLkC,QAAQC,IAAa,aAATvD,GAAyC,WAAlBgD,KAAKb,SAAuBkB,GAClD,aAATrD,GAAyC,WAAlBgD,KAAKb,UAC9Ba,KAAKL,WAAaK,KAAKlB,KAAKuB,IAAQtC,GACpCiC,KAAKJ,SAAWI,KAAKlB,KAAKuB,IACrBjC,GAAMoC,OAAOR,KAAKlB,KAAKuB,IAChC,EACAN,iBACE,MAAMR,QAAaS,KAAKjB,SAASiB,KAAKP,QAASO,KAAKN,KAAO,EAAGM,KAAKF,aAAcE,KAAKH,WAClFN,GAAMkB,OAAS,GAAGT,KAAKN,MAC7B,EACAgB,eACMV,KAAKN,KAAO,GAAGM,KAAKN,OACxBM,KAAKjB,SAASiB,KAAKP,QAASO,KAAKN,KAAMM,KAAKF,aAAcE,KAAKH,UACjE,EACAc,OAAOC,GACLZ,KAAKN,KAAOkB,EACZZ,KAAKjB,SAASiB,KAAKP,QAASO,KAAKN,KAAMM,KAAKF,aAAcE,KAAKH,UACjE,EACAgB,YACEb,KAAKN,KAAO,EACZM,KAAKjB,SAASiB,KAAKP,QAASO,KAAKN,KAAMM,KAAKF,aAAcE,KAAKH,UACjE,EACAiB,WACEd,KAAKN,KAAOM,KAAKZ,eACjBY,KAAKjB,SAASiB,KAAKP,QAASO,KAAKN,KAAMM,KAAKF,aAAcE,KAAKH,UACjE,EACAkB,YAAYC,GACLA,EAAM/D,QACX+C,KAAKN,KAAO,EACRM,KAAKF,eAAiBkB,EAAMhE,KAAMgD,KAAKH,WAAaG,KAAKH,WACtDG,KAAKF,aAAekB,EAAMhE,KAAMgD,KAAKH,WAAY,GACxDG,KAAKjB,SAASiB,KAAKP,QAASO,KAAKN,KAAMM,KAAKF,aAAcE,KAAKH,WACjE,EACAoB,QAAQtD,GACNqC,KAAKL,YAAa,EAClBK,KAAKd,UAAUc,KAAKlB,KAAKnB,IAAII,GAAIiC,KAAKJ,SACxC,EACAsB,cAAc3B,GACZ,OAAOA,GAAMU,IAAID,KAAKmB,gBACxB,EACAA,gBAAgBC,GACd,IAAIC,EAAa,GACjB,IAAK,IAAIzE,KAAKoD,KAAKpB,OAAQ,CACzB,MAAM0C,EAAW1E,EAAEI,KAAKuE,MAAM,MAAQ3E,EAAE2E,MAAM,KAC9C,IAAIC,EAAIJ,EACRE,GAAUG,SAASC,GAAOF,EAAIA,IAAIE,KAElB,kBAAZ9E,GAAGI,MAAwC,qBAAZJ,GAAGI,OAA6BwE,GAAIvG,EAAAA,EAAAA,eAAcuG,IAErE,SAAZ5E,GAAGI,OAAiBwE,EAAIA,EAAEG,OAAO,EAAG,MAExCN,EAAWO,KAAKJ,GAAK,GACvB,CACA,OAAOH,CACT,I,QCvJJ,MAAMQ,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,kHCParG,MAAM,wB,SAkCFA,MAAM,qB,aAgBNA,MAAM,iB,GACP2B,EAAAA,EAAAA,GAA+C,QAAzC3B,MAAM,cAAa,mBAAe,G,iBAKvCA,MAAM,gB,GACP2B,EAAAA,EAAAA,GAA2D,QAArD3B,MAAM,cAAa,+BAA2B,G,6IA1DhEgB,EAAAA,EAAAA,IAsEM,aArEFW,EAAAA,EAAAA,GAkEM,MAlENC,EAkEM,EAjEFD,EAAAA,EAAAA,GAEM,WAFD,SACG,QAAGT,EAAAA,MAAMoB,IAAE,IAEnBX,EAAAA,EAAAA,GAEM,WAFD,aACO,QAAGD,EAAAA,cAAcR,EAAAA,MAAMoF,gBAAa,IAEhD3E,EAAAA,EAAAA,GAEM,WAFD,eACS,QAAGT,EAAAA,MAAMqF,SAAW,IAAIrF,EAAAA,MAAMqF,WAAa,OAAL,IAEpD5E,EAAAA,EAAAA,GAEM,WAFD,kBACY,QAAGT,EAAAA,MAAMsF,SAAO,IAEjC7E,EAAAA,EAAAA,GAEM,WAFD,eACS,QAAGT,EAAAA,MAAMuF,aAAW,IAElC9E,EAAAA,EAAAA,GAEM,WAFD,qBACe,QAAGT,EAAAA,MAAMwF,SAAO,IAEpC/E,EAAAA,EAAAA,GAEM,WAFD,sBACgB,QAAGT,EAAAA,MAAMyF,aAAW,IAEzChF,EAAAA,EAAAA,GAEM,WAFD,qBACe,WAAMT,EAAAA,MAAM0F,WAAW1F,EAAAA,MAAMK,QAAQL,EAAAA,MAAM2F,cAAU,IAEzElF,EAAAA,EAAAA,GAEM,WAFD,cACQ,QAAGT,EAAAA,MAAM4F,OAAK,IAE3BnF,EAAAA,EAAAA,GAEM,WAFD,mBACa,QAAGT,EAAAA,MAAM6F,aAAW,IAEtCpF,EAAAA,EAAAA,GAEM,WAFD,kBACY,QAAGT,EAAAA,MAAM8F,SAAO,GAE0B,YAAtB9F,EAAAA,MAAM6F,cAAW,WAAtD/F,EAAAA,EAAAA,IAEM,MAFNiG,EAEM,EADFtF,EAAAA,EAAAA,GAAmD,OAA7CE,IAAKX,EAAAA,MAAMgG,mBAAoBC,MAAM,O,8BAE/CxF,EAAAA,EAAAA,GAEM,WAFD,yBACmB,QAA4B,OAAzBT,EAAAA,MAAMkG,eAA0BlG,EAAAA,MAAMkG,eAAiB,aAAH,IAE/EzF,EAAAA,EAAAA,GAGM,WAHD,eACS,QAAGT,EAAAA,MAAMmG,WAAa,GAAGnG,EAAAA,MAAMmG,iBAAiBnG,EAAAA,MAAMoG,YAAiC,UAArBpG,EAAAA,MAAMqG,WAAU,wBAGhG5F,EAAAA,EAAAA,GAEM,WAFD,mBACa,QAAGT,EAAAA,MAAMsG,OAAK,IAEhC7F,EAAAA,EAAAA,GAEM,WAFD,aACO,QAAGT,EAAAA,MAAMuG,QAAM,IAE3B9F,EAAAA,EAAAA,GAKM,MALNa,EAKM,CAJFkF,IAA+C,aAC/C1G,EAAAA,EAAAA,IACsBC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IADGC,EAAAA,UAAVuG,K,WAAfzG,EAAAA,EAAAA,IACsB,UADcM,IAAKmG,EAAQzH,MAAM,kBAAmByB,QAAK,GAAEC,EAAAA,aAAa+F,K,QAC1FA,GAAM,Q,SAGd9F,EAAAA,EAAAA,GASM,MATNgG,EASM,CARFC,GACA3H,EAAAA,EAAAA,IAMc4H,EAAAA,CAND7H,MAAM,QAAM,C,kBACrB,IACsE,EADtEC,EAAAA,EAAAA,IACsEsC,EAAAA,CAD1DvC,MAAM,oBAAoB8H,YAAY,qBAAqB,aAAW,qBAC9E,mBAAiB,qB,WAA8B5G,EAAAA,gB,qCAAAA,EAAAA,gBAAe,I,wBAClEjB,EAAAA,EAAAA,IAEUwC,EAAAA,CAFDQ,KAAK,SAASnC,MAAM,UAAUiH,QAAQ,UAAUzF,GAAG,qBAAsBb,QAAOC,EAAAA,a,mBAAa,IAEtG,UAFsG,kB,kCAMlHzB,EAAAA,EAAAA,IACqB+H,EAAAA,CADb7E,OAAQjC,EAAAA,gBAAkBoC,SAAU5B,EAAAA,IAAM0B,QAASR,EAAAA,YAAcS,KAAMnC,EAAAA,KAAMwC,SAAS,OAC1FnC,KAAK,W,sGASjB,MAAM0G,EAAQC,IAAAA,OAAa,CACvBC,iBAAiB,EACjBC,YAAa,YAIjB,OACIC,WAAY,CACRC,MAAKA,EAAAA,GAETtF,MAAO,CAAC,WACRc,OACI,MAAO,CACHmE,MAAOA,EACPM,aAAa,EACbpE,SAAU,CAAC,EACX3C,MAAO,CAAC,EACR6B,KAAM,GACNmF,SAAU,CACN,QACA,UACA,cACA,eACA,YACA,WACA,WACJC,gBAAiB,KACjBC,gBAAiB,CACb,CACInH,KAAM,KACNQ,MAAO,WAEX,CACIR,KAAM,QACNQ,MAAO,YAEX,CACIR,KAAM,cACNQ,MAAO,SAEX,CACIR,KAAM,QACNQ,MAAO,eAIvB,EACA4G,UACA,EACAjE,QAAS,CACLkE,OAAOC,GACHtE,KAAKgE,aAAc,EACnBM,EAAMC,WAAa,IAAIC,IAAIF,EAAMC,YACjCvE,KAAKJ,SAAW0E,EAChBhE,QAAQC,IAAI+D,GACZtE,KAAKyE,SAAW,MACpB,EACAxJ,cAAa,gBACbyJ,aAAaC,GACT3E,KAAK4E,OAAOC,MAAMnB,MAAMoB,IAAI9E,KAAK4E,OAAOC,MAAME,WAAa,oBAAqB,CAC5EhH,GAAIiC,KAAK/C,MAAMc,GACfmF,OAAQyB,IAEPK,MAAKjF,UACFC,KAAK/C,MAAMiG,OAASyB,CAAS,IAEhCM,OAAMzD,IAAO0D,EAAAA,EAAAA,MAAe,aAAc1D,EAAE,GACrD,EACA2D,cACInF,KAAK4E,OAAOC,MAAMnB,MAAM0B,KAAKpF,KAAK4E,OAAOC,MAAME,WAAa,sBAAuB,CAC/E9C,QAASjC,KAAK/C,MAAMgF,QACpBoD,KAAMrF,KAAKkE,kBAEVc,MAAKjF,UACFC,KAAKkE,gBAAkB,KACvBoB,MAAM,+BAA+B,IAExCL,OAAMzD,IAAO0D,EAAAA,EAAAA,MAAe,aAAc1D,EAAE,GACrD,EACA+D,IAAIC,EAAM9F,GAEN,OADAY,QAAQC,IAAIP,KAAKyF,KACV/B,EACF6B,IAAIvF,KAAK4E,OAAOC,MAAME,WAAa,qBAAsB,CACtDW,OAAQ,CACJF,KAAMA,GAAQ,GACd9F,KAAMA,GAAQ,EACd3B,GAAIiC,KAAK2F,OAAOD,OAAOE,WAG9BZ,MAAMa,IACHA,EAAItG,KAAKuG,MAAQD,EAAItG,KAAKuG,OAAO7F,KAAIC,IAC7BA,EAAG6F,cAAa7F,EAAG1C,MAAS,GAAE0C,EAAG1C,gBAAgB0C,EAAG6F,gBACjD7F,KAEP2F,EAAItG,KAAKuG,OAAOrF,OAAS,IAAGT,KAAKlB,KAAO+G,EAAItG,KAAKuG,OACrD9F,KAAK/C,MAAQ4I,EAAItG,IAAG,IAEvB0F,OAAOe,IACJd,EAAAA,EAAAA,MAAe,aAAcc,IACtB,IAEnB,I,QC7KR,MAAMnE,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/utils/dateFormatter.js","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue?7a8d","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Order.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Order.vue?7012"],"sourcesContent":["let options = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n};\r\n\r\nmodule.exports = {\r\n  dateFormatter: (date) => {\r\n    return new Date(date).toLocaleDateString('ru-RU', options);\r\n  },\r\n  getAgeStr(months) {\r\n    return months > 12 ? `${Math.trunc(months / 12)} лет ${months % 12} месяцев` : `${months} месяцев`;\r\n  },\r\n};\r\n","<template>\r\n  <CRow>\r\n    <CCol :md=\"12\">\r\n      <CCard class=\"mb-4\">\r\n        <CCardHeader> {{ name }} </CCardHeader>\r\n        <CCardBody>\r\n          <CTable align=\"middle\" class=\"mb-0 border\" hover responsive>\r\n            <CTableHead color=\"light\">\r\n              <CTableRow>\r\n                <CTableHeaderCell v-for=\"f in    fieldsTransformed   \" :key=\"f.name + 'header'\" class=\"text-center\"\r\n                  :class=\"[f.order ? 'orderable' : '',\r\n                  f.name === currentOrder ? 'current' : '',\r\n                  orderDesc === true && f.name === currentOrder ? 'desc' : '']\" @click=\"changeOrder(f)\">\r\n                  <div class=\"order-toggle\"><img :src=\"require('@/assets/images/arrow_up.svg')\" /></div>\r\n                  {{ f.title }}\r\n                </CTableHeaderCell>\r\n                <CTableHeaderCell class=\"text-center\">Действия</CTableHeaderCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              <CTableRow v-for=\"(   row, i   ) in    transformData(rows)   \" :key=\"i + 'row'\">\r\n                <CTableDataCell v-for=\"(   column, j   ) in    row   \" :key=\"j + 'row'\" class=\"text-center\">\r\n                  <CFormInput v-if=\"updatingId === rows[i]?.id\" v-model=\"formData[fields[j]?.name]\" />\r\n                  <span v-else>{{ column }}</span>\r\n                </CTableDataCell>\r\n                <CTableDataCell>\r\n                  <div class=\"d-grid gap-2 d-md-flex justify-content-md-center\">\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'primary'\" size=\"md\" @click=\"editRow(i)\">\r\n                      Сохранить</CButton>\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'light'\" size=\"md\" @click=\"updatingId = false\">\r\n                      Отменить</CButton>\r\n                    <CButton v-else v-for=\"(   info, name   ) in    actions   \" :key=\"name + 'action'\"\r\n                      :color=\"info?.color\" size=\"sm\" @click=\"chooseAction(name, info, i, j, column)\">{{ name }}\r\n                    </CButton>\r\n                  </div>\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n              <CTableRow> </CTableRow>\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  </CRow>\r\n  <CPagination aria-label=\"Page navigation example\">\r\n    <CPaginationItem v-if=\"lastPageNumber\" @click=\"firstPage\">В начало</CPaginationItem>\r\n    <CPaginationItem @click=\"previousPage\">Назад</CPaginationItem>\r\n    <CPaginationItem disabled>{{ page }}</CPaginationItem>\r\n    <CPaginationItem @click=\"nextPage\">Вперед</CPaginationItem>\r\n    <CPaginationItem v-if=\"lastPageNumber\" @click=\"lastPage\">В конец</CPaginationItem>\r\n  </CPagination>\r\n</template>\r\n\r\n<script>\r\nimport { dateFormatter } from '../utils/dateFormatter';\r\n\r\nexport default {\r\n  props: {\r\n    name: {\r\n      type: String,\r\n    },\r\n    fields: [],\r\n    actions: [],\r\n    rows: [],\r\n    postData: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    updateRow: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    editMode: {\r\n      type: String,\r\n      default: 'inline',\r\n    },\r\n    lastPageNumber: Number,\r\n    getPageCount: Function\r\n  },\r\n  data() {\r\n    return {\r\n      fieldsTransformed: [],\r\n      perPage: 10,\r\n      page: 1,\r\n      updatingId: false,\r\n      formData: {},\r\n      orderDesc: true,\r\n      currentOrder: \"id\",\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.fieldsTransformed = this.fields.map((el) => {\r\n      if (typeof el === 'object') el.title = el.title ?? el.name\r\n      else el = { name: el }\r\n      return el;\r\n    })\r\n\r\n    await this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    await this.getPageCount()\r\n  },\r\n  methods: {\r\n    dateFormatter,\r\n    chooseAction(name, info, rowId) {\r\n      if (!info) return\r\n      console.log(name === 'Изменить' && this.editMode === 'inline', rowId)\r\n      if (name === 'Изменить' && this.editMode === 'inline') {\r\n        this.updatingId = this.rows[rowId]?.id\r\n        this.formData = this.rows[rowId]\r\n      } else info?.action(this.rows[rowId])\r\n    },\r\n    async nextPage() {\r\n      const data = await this.postData(this.perPage, this.page + 1, this.currentOrder, this.orderDesc)\r\n      if (data?.length > 0) this.page++\r\n    },\r\n    previousPage() {\r\n      if (this.page > 1) this.page--\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    toPage(n) {\r\n      this.page = n\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    firstPage() {\r\n      this.page = 1\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    lastPage() {\r\n      this.page = this.lastPageNumber\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    changeOrder(field) {\r\n      if (!field.order) return;\r\n      this.page = 1;\r\n      if (this.currentOrder === field.name) this.orderDesc = !this.orderDesc\r\n      else { this.currentOrder = field.name; this.orderDesc = true }\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    editRow(i) {\r\n      this.updatingId = false\r\n      this.updateRow(this.rows[i]?.id, this.formData)\r\n    },\r\n    transformData(data) {\r\n      return data?.map(this.transformDataEl)\r\n    },\r\n    transformDataEl(pair) {\r\n      let pairFormed = []\r\n      for (let f of this.fields) {\r\n        const children = f.name.split('.') ?? f.split('.')\r\n        let e = pair\r\n        children?.forEach((c) => (e = e?.[c]))\r\n\r\n        if (f?.name === 'creation_date' || f?.name === 'publication_date') e = dateFormatter(e)\r\n\r\n        if (f?.name === 'text') e = e.substr(0, 100)\r\n\r\n        pairFormed.push(e ?? '')\r\n      }\r\n      return pairFormed\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.btn-md {\r\n  margin: 0;\r\n}\r\n\r\nth:not(.orderable)>.order-toggle {\r\n  display: none;\r\n\r\n}\r\n\r\nth.orderable {\r\n  &>.order-toggle {\r\n    img {\r\n      height: 15px;\r\n      transition: 0.2s;\r\n    }\r\n  }\r\n\r\n  &.current img {\r\n    background-color: #7db3ff;\r\n    border-radius: 100px;\r\n  }\r\n\r\n  &.desc img {\r\n    transform: rotate(180deg);\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./Table.vue?vue&type=template&id=0e07ac83\"\nimport script from \"./Table.vue?vue&type=script&lang=js\"\nexport * from \"./Table.vue?vue&type=script&lang=js\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=0e07ac83&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-credit\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"card mb-4 order-card\">\r\n            <div>\r\n                ID: {{ order.id }}\r\n            </div>\r\n            <div>\r\n                Создан: {{ dateFormatter(order.creation_date) }}\r\n            </div>\r\n            <div>\r\n                Телеграм: {{ order.username ? `@${order.username}` : \"Нет\" }}\r\n            </div>\r\n            <div>\r\n                Телеграм ID: {{ order.user_id }}\r\n            </div>\r\n            <div>\r\n                Доставка: {{ order.selected_dm }}\r\n            </div>\r\n            <div>\r\n                Адрес доставки: {{ order.address }}\r\n            </div>\r\n            <div>\r\n                Почтовый индекс: {{ order.postal_code }}\r\n            </div>\r\n            <div>\r\n                ФИО получателя: {{ `${order.surname} ${order.name} ${order.patronymic}` }}\r\n            </div>\r\n            <div>\r\n                Телефон: {{ order.phone }}\r\n            </div>\r\n            <div>\r\n                Метод оплаты: {{ order.selected_po }}\r\n            </div>\r\n            <div>\r\n                Комментарий: {{ order.comment }}\r\n            </div>\r\n            <div class=\"reciept-container\" v-if=\"order.selected_po === 'Перевод'\">\r\n                <img :src=\"order.reciept_photo_link\" width=\"480\" />\r\n            </div>\r\n            <div>\r\n                Стоимость доставки: {{ order.delivery_price !== null ? order.delivery_price : \"Не учтена\" }}\r\n            </div>\r\n            <div>\r\n                Промокод: {{ order.promo_code ? `${order.promo_code} на ${order.promo_sum}${order.promo_type === 'money' ?\r\n                    'руб.' : '%'}` : 'Нет' }}\r\n            </div>\r\n            <div>\r\n                Сумма заказа: {{ order.total }}\r\n            </div>\r\n            <div>\r\n                Статус: {{ order.status }}\r\n            </div>\r\n            <div class=\"change-status\">\r\n                <span class=\"w-100 mb-2\">Изменить статус</span>\r\n                <button v-for=\"status in statuses\" :key=\"status\" class=\"btn btn-primary\" @click=\"changeStatus(status)\">{{\r\n                    status }}</button>\r\n\r\n            </div>\r\n            <div class=\"send-message\">\r\n                <span class=\"w-100 mb-2\">Отправить сообщение клиенту</span>\r\n                <CInputGroup class=\"mb-2\">\r\n                    <CFormInput class=\"custon-input-part\" placeholder=\"Напишите сообщение\" aria-label=\"Напишите сообщение\"\r\n                        aria-describedby=\"button-sendmessage\" v-model=\"messageTemplate\" />\r\n                    <CButton type=\"button\" color=\"primary\" variant=\"outline\" id=\"button-sendmessage\" @click=\"sendMessage\">\r\n                        Отправить\r\n                    </CButton>\r\n                </CInputGroup>\r\n            </div>\r\n        </div>\r\n        <Table :fields=\"tableFieldNames\" :postData=\"get\" :actions=\"dataActions\" :rows=\"rows\" editMode=\"form\"\r\n            name=\"Позиции\" />\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport Table from '@/components/Table.vue'\r\nimport eventBus from '../eventBus'\r\nimport { dateFormatter } from '../utils/dateFormatter';\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n    withCredentials: true,\r\n    credentials: 'include'\r\n\r\n})\r\n\r\nexport default {\r\n    components: {\r\n        Table,\r\n    },\r\n    props: ['orderId'],\r\n    data() {\r\n        return {\r\n            myApi: myApi,\r\n            formVisible: false,\r\n            formData: {},\r\n            order: {},\r\n            rows: [],\r\n            statuses: [\r\n                \"Новый\",\r\n                \"Оплачен\",\r\n                \"В обработке\",\r\n                \"Доставляется\",\r\n                \"Доставлен\",\r\n                \"Завершен\",\r\n                \"Отменен\",],\r\n            messageTemplate: null,\r\n            tableFieldNames: [\r\n                {\r\n                    name: 'id',\r\n                    title: 'Артикул',\r\n                },\r\n                {\r\n                    name: 'title',\r\n                    title: 'Название',\r\n                },\r\n                {\r\n                    name: 'option_name',\r\n                    title: 'Опция',\r\n                },\r\n                {\r\n                    name: 'count',\r\n                    title: 'Количество',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        change(elObj) {\r\n            this.formVisible = true\r\n            elObj.tags_array = new Set(elObj.tags_array)\r\n            this.formData = elObj\r\n            console.log(elObj)\r\n            this.formMode = 'edit'\r\n        },\r\n        dateFormatter,\r\n        changeStatus(newStatus) {\r\n            this.$store.state.myApi.put(this.$store.state.publicPath + '/api/admin/orders', {\r\n                id: this.order.id,\r\n                status: newStatus,\r\n            })\r\n                .then(async () => {\r\n                    this.order.status = newStatus;\r\n                })\r\n                .catch(e => { eventBus.$emit('noresponse', e) })\r\n        },\r\n        sendMessage() {\r\n            this.$store.state.myApi.post(this.$store.state.publicPath + '/api/admin/messages', {\r\n                user_id: this.order.user_id,\r\n                text: this.messageTemplate\r\n            })\r\n                .then(async () => {\r\n                    this.messageTemplate = null;\r\n                    alert(\"Сообщение успешно отправлено\")\r\n                })\r\n                .catch(e => { eventBus.$emit('noresponse', e) })\r\n        },\r\n        get(take, page) {\r\n            console.log(this.tag)\r\n            return myApi\r\n                .get(this.$store.state.publicPath + '/api/admin/orders/', {\r\n                    params: {\r\n                        take: take ?? 10,\r\n                        page: page ?? 1,\r\n                        id: this.$route.params.orderId,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    res.data.items = res.data.items?.map(el => {\r\n                        if (el.mainside_id) el.title = `${el.title} (обр - ${el.mainside_id})`;\r\n                        return el\r\n                    })\r\n                    if (res.data.items?.length > 0) this.rows = res.data.items\r\n                    this.order = res.data\r\n                })\r\n                .catch((error) => {\r\n                    eventBus.$emit('noresponse', error)\r\n                    return false\r\n                })\r\n        },\r\n    },\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\">\r\nbutton {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.order-card {\r\n    padding: 1rem;\r\n    font-size: 1.2rem;\r\n\r\n    button {\r\n        margin-bottom: 0 !important;\r\n    }\r\n}\r\n\r\n.change-status {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    button {\r\n        width: 150px;\r\n        margin-right: 20px;\r\n        margin-bottom: 20px !important;\r\n    }\r\n}\r\n\r\n.custon-input-part {\r\n    height: 38px !important\r\n}\r\n</style>\r\n  ","import { render } from \"./Order.vue?vue&type=template&id=7dfda02a\"\nimport script from \"./Order.vue?vue&type=script&lang=js\"\nexport * from \"./Order.vue?vue&type=script&lang=js\"\n\nimport \"./Order.vue?vue&type=style&index=0&id=7dfda02a&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-credit\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["options","year","month","day","module","exports","dateFormatter","date","Date","toLocaleDateString","getAgeStr","months","Math","trunc","class","_createVNode","_component_CRow","_component_CCol","md","_component_CCard","_component_CCardHeader","$props","_component_CCardBody","_component_CTable","align","hover","responsive","_component_CTableHead","color","_component_CTableRow","_createElementBlock","_Fragment","$data","f","_createBlock","_component_CTableHeaderCell","key","name","order","onClick","$options","_createElementVNode","_hoisted_1","src","require","title","_component_CTableBody","row","i","column","j","_component_CTableDataCell","id","_component_CFormInput","_hoisted_4","_component_CButton","size","info","_ctx","_component_CPagination","_component_CPaginationItem","disabled","props","type","String","fields","actions","rows","postData","Function","default","updateRow","editMode","lastPageNumber","Number","getPageCount","data","fieldsTransformed","perPage","page","updatingId","formData","orderDesc","currentOrder","async","this","map","el","methods","chooseAction","rowId","console","log","action","length","previousPage","toPage","n","firstPage","lastPage","changeOrder","field","editRow","transformData","transformDataEl","pair","pairFormed","children","split","e","forEach","c","substr","push","__exports__","render","creation_date","username","user_id","selected_dm","address","postal_code","surname","patronymic","phone","selected_po","comment","_hoisted_2","reciept_photo_link","width","delivery_price","promo_code","promo_sum","promo_type","total","status","_hoisted_5","_hoisted_7","_hoisted_8","_component_CInputGroup","placeholder","variant","_component_Table","myApi","axios","withCredentials","credentials","components","Table","formVisible","statuses","messageTemplate","tableFieldNames","created","change","elObj","tags_array","Set","formMode","changeStatus","newStatus","$store","state","put","publicPath","then","catch","eventBus","sendMessage","post","text","alert","get","take","tag","params","$route","orderId","res","items","mainside_id","error"],"sourceRoot":""}