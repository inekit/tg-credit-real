{"version":3,"file":"js/266.99309025.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/utils/dateFormatter.js","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue?7a8d","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Items.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddItemModal.vue","webpack://@coreui/coreui-free-vue-admin-template/./node_modules/turndown/lib/turndown.browser.es.js","webpack://@coreui/coreui-free-vue-admin-template/./node_modules/marked/lib/marked.esm.js","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddItemModal.vue?860e","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Items.vue?bb6c"],"sourcesContent":["let options = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n};\r\n\r\nmodule.exports = {\r\n  dateFormatter: (date) => {\r\n    return new Date(date).toLocaleDateString('ru-RU', options);\r\n  },\r\n  getAgeStr(months) {\r\n    return months > 12 ? `${Math.trunc(months / 12)} лет ${months % 12} месяцев` : `${months} месяцев`;\r\n  },\r\n};\r\n","<template>\r\n  <CRow>\r\n    <CCol :md=\"12\">\r\n      <CCard class=\"mb-4\">\r\n        <CCardHeader> {{ name }} </CCardHeader>\r\n        <CCardBody>\r\n          <CTable align=\"middle\" class=\"mb-0 border\" hover responsive>\r\n            <CTableHead color=\"light\">\r\n              <CTableRow>\r\n                <CTableHeaderCell v-for=\"f in   fieldsTransformed  \" :key=\"f.name + 'header'\" class=\"text-center\"\r\n                  :class=\"[f.order ? 'orderable' : '']\" @click=\"changeOrder(f.order)\">{{ f.title }}\r\n                  <div class=\"order-toggle\">tgl</div>\r\n                </CTableHeaderCell>\r\n                <CTableHeaderCell class=\"text-center\">Действия</CTableHeaderCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              <CTableRow v-for=\"(  row, i  ) in   transformData(rows)  \" :key=\"i + 'row'\">\r\n                <CTableDataCell v-for=\"(  column, j  ) in   row  \" :key=\"j + 'row'\" class=\"text-center\">\r\n                  <CFormInput v-if=\"updatingId === rows[i]?.id\" v-model=\"formData[fields[j]?.name]\" />\r\n                  <span v-else>{{ column }}</span>\r\n                </CTableDataCell>\r\n                <CTableDataCell>\r\n                  <div class=\"d-grid gap-2 d-md-flex justify-content-md-center\">\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'primary'\" size=\"md\" @click=\"editRow(i)\">\r\n                      Сохранить</CButton>\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'light'\" size=\"md\" @click=\"updatingId = false\">\r\n                      Отменить</CButton>\r\n                    <CButton v-else v-for=\"(  info, name  ) in   actions  \" :key=\"name + 'action'\" :color=\"info?.color\"\r\n                      size=\"sm\" @click=\"chooseAction(name, info, i, j, column)\">{{ name }}</CButton>\r\n                  </div>\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n              <CTableRow> </CTableRow>\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  </CRow>\r\n  <CPagination aria-label=\"Page navigation example\">\r\n    <CPaginationItem v-if=\"lastPageNumber\" @click=\"firstPage\">В начало</CPaginationItem>\r\n    <CPaginationItem @click=\"previousPage\">Назад</CPaginationItem>\r\n    <CPaginationItem disabled>{{ page }}</CPaginationItem>\r\n    <CPaginationItem @click=\"nextPage\">Вперед</CPaginationItem>\r\n    <CPaginationItem v-if=\"lastPageNumber\" @click=\"lastPage\">В конец</CPaginationItem>\r\n  </CPagination>\r\n</template>\r\n\r\n<script>\r\nimport { dateFormatter } from '../utils/dateFormatter';\r\n\r\nexport default {\r\n  props: {\r\n    name: {\r\n      type: String,\r\n    },\r\n    fields: [],\r\n    actions: [],\r\n    rows: [],\r\n    postData: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    updateRow: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    editMode: {\r\n      type: String,\r\n      default: 'inline',\r\n    },\r\n    lastPageNumber: Number,\r\n    getPageCount: Function\r\n  },\r\n  data() {\r\n    return {\r\n      fieldsTransformed: [],\r\n      perPage: 10,\r\n      page: 1,\r\n      updatingId: false,\r\n      formData: {},\r\n      orderDesc: false,\r\n      currentOrder: \"id\",\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.fieldsTransformed = this.fields.map((el) => {\r\n      if (typeof el === 'object') el.title = el.title ?? el.name\r\n      else el = { name: el }\r\n      return el;\r\n    })\r\n\r\n    await this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    await this.getPageCount()\r\n  },\r\n  methods: {\r\n    dateFormatter,\r\n    chooseAction(name, info, rowId) {\r\n      if (!info) return\r\n      console.log(name === 'Изменить' && this.editMode === 'inline', rowId)\r\n      if (name === 'Изменить' && this.editMode === 'inline') {\r\n        this.updatingId = this.rows[rowId]?.id\r\n        this.formData = this.rows[rowId]\r\n      } else info?.action(this.rows[rowId])\r\n    },\r\n    async nextPage() {\r\n      const data = await this.postData(this.perPage, this.page + 1, this.currentOrder, this.orderDesc)\r\n      if (data?.length > 0) this.page++\r\n    },\r\n    previousPage() {\r\n      if (this.page > 1) this.page--\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    toPage(n) {\r\n      this.page = n\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    firstPage() {\r\n      this.page = 1\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    lastPage() {\r\n      this.page = this.lastPageNumber\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    changeOrder(field) {\r\n      this.page = 1;\r\n      if (this.currentOrder === field.name) this.orderDesc = !this.orderDesc\r\n      else this.currentOrder = field.name\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    editRow(i) {\r\n      this.updatingId = false\r\n      this.updateRow(this.rows[i]?.id, this.formData)\r\n    },\r\n    transformData(data) {\r\n      return data?.map(this.transformDataEl)\r\n    },\r\n    transformDataEl(pair) {\r\n      let pairFormed = []\r\n      for (let f of this.fields) {\r\n        const children = f.name.split('.') ?? f.split('.')\r\n        let e = pair\r\n        children?.forEach((c) => (e = e?.[c]))\r\n\r\n        if (f?.name === 'creation_date' || f?.name === 'publication_date') e = dateFormatter(e)\r\n\r\n        if (f?.name === 'text') e = e.substr(0, 100)\r\n\r\n        pairFormed.push(e ?? '')\r\n      }\r\n      return pairFormed\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.btn-md {\r\n  margin: 0;\r\n}\r\n\r\n.th:not(.orderable) {\r\n  display: hidden;\r\n}\r\n</style>\r\n","import { render } from \"./Table.vue?vue&type=template&id=50411ffb\"\nimport script from \"./Table.vue?vue&type=script&lang=js\"\nexport * from \"./Table.vue?vue&type=script&lang=js\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=50411ffb&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-vapeshop\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <AddItemModal :visible=\"formVisible\" :formData=\"formData\" :mode=\"formMode\" />\r\n    <CFormInput class=\"mb-4\" type=\"search\" v-model=\"searchQuery\" @change=\"get()\" placeholder=\"Поиск\" />\r\n    <Table :fields=\"tableFieldNames\" :postData=\"get\" :actions=\"dataActions\" :rows=\"rows\" editMode=\"form\" name=\"Позиции\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddItemModal from '@/components/AddItemModal.vue'\r\nimport Table from '@/components/Table.vue'\r\nimport eventBus from '../eventBus'\r\n\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n  credentials: 'include'\r\n\r\n})\r\n\r\nexport default {\r\n  components: {\r\n    AddItemModal,\r\n    Table,\r\n  },\r\n  props: ['tag', 'project'],\r\n  data() {\r\n    return {\r\n      myApi: myApi,\r\n      formVisible: false,\r\n      formData: {},\r\n      rows: [],\r\n      dataActions: {\r\n        Дублировать: { action: this.duble, color: 'primary' },\r\n        Изменить: { action: this.change, color: 'warning' },\r\n        Удалить: { action: this.delete, color: 'danger' },\r\n      },\r\n      tableFieldNames: [\r\n        {\r\n          name: 'title',\r\n          title: 'Название',\r\n        },\r\n        {\r\n          name: 'description',\r\n          title: 'Описание',\r\n        },\r\n        {\r\n          name: 'publication_date',\r\n          title: 'Дата добавления',\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  created() {\r\n    eventBus.$on('addNewPost', () => {\r\n      this.formMode = 'new'\r\n      this.formData = {\r\n        category: this.$route.params.categoryName,\r\n      }\r\n      this.formVisible = true\r\n    })\r\n    eventBus.$on('closeModal', () => {\r\n      this.formVisible = false\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postAdded', () => {\r\n      this.formVisible = false\r\n      //this.rows.unshift(this.formData)\r\n      this.get()\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postEdited', () => {\r\n      this.formVisible = false\r\n      this.get()\r\n      this.formData = {}\r\n    })\r\n  },\r\n  methods: {\r\n    change(elObj) {\r\n      this.formVisible = true\r\n      elObj.tags_array = new Set(elObj.tags_array)\r\n      this.formData = elObj\r\n      console.log(elObj)\r\n      this.formMode = 'edit'\r\n    },\r\n    constractFromData(elObj) {\r\n      var formData = new FormData()\r\n\r\n      formData.append('title', elObj.title)\r\n      formData.append('description', elObj.description)\r\n      elObj.image_list?.forEach(v => {\r\n        formData.append('images[]', v);\r\n      });\r\n      elObj.category_name &&\r\n        formData.append('categoryName', elObj.category_name)\r\n\r\n      const options_object = {};\r\n      const options_object_backside = {};\r\n      elObj.options_array = elObj.options_array?.\r\n        filter(({ material, price, size }) => !material && !size && !price ? false : true)\r\n\r\n      for (let { size, material, price, is_backside } of elObj.options_array) {\r\n        if (!is_backside) {\r\n          options_object[material] ? options_object[material][size] = price :\r\n            options_object[material] = { [size]: price }\r\n\r\n          options_object_backside[material] ? options_object_backside[material][size] = options_object_backside[material][size] ?? null :\r\n            options_object_backside[material] = { [size]: null }\r\n        }\r\n        else {\r\n          options_object_backside[material] ? options_object_backside[material][size] = price :\r\n            options_object_backside[material] = { [size]: price }\r\n\r\n          options_object[material] ? options_object[material][size] = options_object[material][size] ?? null :\r\n            options_object[material] = { [size]: null }\r\n\r\n        }\r\n      }\r\n\r\n      formData.append('optionsObject', JSON.stringify(options_object))\r\n      formData.append('optionsObjectBackside', JSON.stringify(options_object_backside))\r\n\r\n      return formData\r\n    },\r\n    duble(elObj) {\r\n      try {\r\n        const formData = this.constractFromData(elObj)\r\n\r\n        myApi\r\n          .post(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postAdded')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n      }\r\n    },\r\n    get(take, page) {\r\n      console.log(this.tag)\r\n      return myApi\r\n        .get(this.$store.state.publicPath + '/api/admin/items/', {\r\n          params: {\r\n            take: take ?? 10,\r\n            page: page ?? 1,\r\n            tagsArray: this.$route.params.tag\r\n              ? [this.$route.params.tag]\r\n              : undefined,\r\n            category: this.$route.params.categoryName,\r\n            searchQuery: this.searchQuery\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.data?.length > 0) this.rows = res.data\r\n          return res.data\r\n        })\r\n        .catch((error) => {\r\n          eventBus.$emit('noresponse', error)\r\n          return false\r\n        })\r\n    },\r\n    delete(item) {\r\n      const result = confirm('Вы действительно хотите удалить позицию из каталога?')\r\n      if (result)\r\n        return myApi\r\n          .delete(this.$store.state.publicPath + '/api/admin/items/', {\r\n            data: { id: item.id },\r\n          })\r\n          .then(() => {\r\n            this.get()\r\n            eventBus.$emit('postDeleted')\r\n          })\r\n          .catch((error) => {\r\n            eventBus.$emit('noresponse', error)\r\n          })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nbutton {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","<template>\r\n  <CButton color=\"primary\" @click=\"addNewPost\">Добавить товар</CButton>\r\n  <CModal size=\"xl\" backdrop=\"static\" alignment=\"center\" :visible=\"visible\" @close=\"closeModal\">\r\n    <CForm novalidate :validated=\"formValid\" ref=\"add-file-form\" @change=\"wregert\"\r\n      @submit.prevent=\"mode === 'new' ? addNewing() : editNewing()\" class=\"add-user\" style=\"display: 'none'\">\r\n      <CModalHeader>\r\n        <CModalTitle>{{\r\n          mode === 'new' ? 'Добавить товар' : 'Редактировать товар'\r\n        }}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CFormInput class=\"mb-3\" v-model=\"formData.title\" placeholder=\"Заголовок\" id=\"inputHeader\"\r\n          aria-describedby=\"inputGroupPrepend\" feedbackValid=\"Все ок\" feedbackInvalid=\"Введите корректный заголовок\"\r\n          required />\r\n        <CFormInput type=\"number\" class=\"mb-3\" label=\"Количество затяжек\" placeholder=\"Введите количество затяжек\"\r\n          v-model=\"formData.puffs_count\" />\r\n        <CFormInput type=\"number\" class=\"mb-3\" label=\"Крепость\" placeholder=\"Введите крепость\"\r\n          v-model=\"formData.taste_strength\" />\r\n        <CFormInput type=\"file\" accept=\"image/*\" ref=\"file\" @change=\"previewImage\" class=\"mb-3\" label=\"Превью\"\r\n          placeholder=\"Превью\" />\r\n        <div class=\"border p-2 mt-3 preview-container\">\r\n          <template v-if=\"preview\">\r\n            <img :src=\"preview\" class=\"img-fluid w-25\" />\r\n          </template>\r\n        </div>\r\n        <div class=\"projects-list\">\r\n          <span>Категория</span>\r\n          <CFormCheck v-for=\"project in projects\" :key=\"project.name\" :id=\"project.name\"\r\n            :checked=\"project.name === formData.category_name\" @change=\"changeP\" type=\"radio\" name=\"project-name\"\r\n            :value=\"project.name\" :label=\"project.name\" />\r\n          <CFormCheck id=\"null-name\" :checked=\"!formData.category_name\" @change=\"changeP\" type=\"radio\" name=\"project-name\"\r\n            value=\"\" label=\"Без категорий\" />\r\n        </div>\r\n        <CFormInput type=\"number\" class=\"mb-3\" label=\"Цена\" placeholder=\"Введите цену\" v-model.number=\"formData.price\" />\r\n        <label class=\"form-label\">Оптовые скидки</label>\r\n        <div v-if=\"formData.sale_count || formData.sale_price\">\r\n          <CFormInput type=\"number\" class=\"mb-3\" placeholder=\"Введите необходимое количество товара для опта\"\r\n            v-model.number=\"formData.sale_count\" />\r\n          <CFormInput type=\"number\" class=\"mb-3\" placeholder=\"Введите оптовую цену\"\r\n            v-model.number=\"formData.sale_price\" />\r\n          <CButton color=\"danger\" type=\"button\" @click=\"formData.sale_count = null; formData.sale_price = null\">\r\n            Убрать скидку\r\n          </CButton>\r\n        </div>\r\n        <CButton v-else color=\"primary\" type=\"button\" style=\"display: block;\"\r\n          @click=\"formData.sale_count = 5; formData.sale_price = formData.price\">\r\n          Добавить скидку\r\n        </CButton>\r\n\r\n        <div class=\"options-shedle\">\r\n          <span>Опции</span>\r\n          <CFormCheck id=\"select-taste\" @change=\"formData.select_name = 'Вкус'\" type=\"radio\" name=\"select-name\"\r\n            value=\"Вкус\" label=\"Вкус\" :checked=\"formData.select_name === 'Вкус'\" />\r\n          <CFormCheck id=\"select-color\" @change=\"formData.select_name = 'Цвет'\" type=\"radio\" name=\"select-name\"\r\n            value=\"Цвет\" label=\"Цвет\" :checked=\"formData.select_name === 'Цвет'\" />\r\n          <CFormCheck id=\"select-none\" @input=\"selectNone\" @change=\"formData.select_name = null\" type=\"radio\"\r\n            name=\"select-name\" value=\"\" label=\"Без опций\" :checked=\"!formData.select_name\" />\r\n          <div class=\"option-item\" v-for=\"option, id in formData.options_array\" :key=\"option.id\">\r\n            <CFormInput type=\"text\" class=\"mb-3\" label=\"Название\" placeholder=\"Введите название\"\r\n              v-model=\"formData.options_array[id].name\" />\r\n            <CFormInput type=\"text\" class=\"mb-3\" label=\"Полное название в таблице\" placeholder=\"Введите название\"\r\n              v-model=\"formData.options_array[id].table_name\" />\r\n            <CFormInput type=\"number\" class=\"mb-3\" label=\"Остаток\" placeholder=\"Введите остаток\"\r\n              v-model=\"formData.options_array[id].stock\" />\r\n            <CFormInput type=\"file\" accept=\"image/*\" multiple=\"multiple\" ref=\"file\"\r\n              @change=\"previewMultiImage(id, $event)\" class=\"mb-3\" label=\"Превью\" placeholder=\"Превью\" />\r\n            <div class=\"border p-2 mt-3 preview-container\">\r\n              <template v-if=\"preview_list?.[id]?.length\">\r\n                <div v-for=\"item, index in preview_list?.[id]\" :key=\"index\">\r\n                  <img :src=\"item\" class=\"img-fluid\" />\r\n                  <button @click.prevent=\"dropFile(id, index)\">Х</button>\r\n                </div>\r\n              </template>\r\n            </div>\r\n            <CButton v-if=\"id > 0\" color=\"danger\" type=\"button\" @click=\"dropOption(id)\">Удалить\r\n              опцию\r\n            </CButton>\r\n          </div>\r\n          <CButton v-if=\"!!formData.select_name\" color=\"primary\" type=\"button\" @click=\"addOption\">Добавить опцию\r\n          </CButton>\r\n        </div>\r\n\r\n\r\n\r\n        <QuillEditor theme=\"snow\" toolbar=\"essential\" ref=\"postTextEditor\" id=\"postTextEditor\"\r\n          placeholder=\"Краткое описание\" />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" @click=\"closeModal\"> Отменить </CButton>\r\n        <CButton v-show=\"mode === 'new'\" color=\"primary\" type=\"submit\">Добавить</CButton>\r\n        <CButton v-show=\"mode === 'edit'\" color=\"primary\" type=\"submit\">Редактировать</CButton>\r\n      </CModalFooter>\r\n    </CForm>\r\n  </CModal>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n})\r\nimport { QuillEditor } from '@vueup/vue-quill'\r\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\r\nimport TurndownService from 'turndown'\r\nimport { marked } from 'marked'\r\n//import * as DOMPurify from 'dompurify'\r\nimport eventBus from '../eventBus'\r\n\r\nexport default {\r\n  components: { QuillEditor },\r\n  props: {\r\n    mode: {\r\n      required: true,\r\n      type: String,\r\n      validator: (value) => ['new', 'edit'].includes(value.toLowerCase()),\r\n    },\r\n    visible: false,\r\n    formData: {\r\n      title: '',\r\n      text: '',\r\n      description: '',\r\n      preview: '',\r\n      stock: 0,\r\n      price: null,\r\n      category_name: '',\r\n      select_name: null,\r\n      image_list: [],\r\n      tags_array: new Set(),\r\n      options_array: [{ name: \"Опция\" }],\r\n    },\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      formValid: false,\r\n      preview_list: [],\r\n      preview: null,\r\n    }\r\n  },\r\n  updated() {\r\n    this.formData.options_array = this.formData.options_array ?? [{ name: \"Опция\" }];\r\n\r\n    this.formData.description && this.$refs.postTextEditor.pasteHTML(\r\n      marked.parse(this.formData.description?.replaceAll(\"\\r\\n\\r\\n\", \"<span><br/><span/>\\r\\n\\r\\n\")))\r\n\r\n    this.preview = this.formData.preview ? `${this.$store.state.publicPath}/public/pics/${this.formData.preview}` : null;\r\n    this.preview_list = [];\r\n    for (let optionIndex in this.formData.options_array) {\r\n      this.preview_list[optionIndex] = this.formData.options_array[optionIndex].photos?.map(preview_name => `${this.$store.state.publicPath}/public/pics/${preview_name}`)\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.projects = await this.getProjects()\r\n  },\r\n  methods: {\r\n    async getProjects() {\r\n      return await myApi\r\n        .get(this.$store.state.publicPath + '/api/categories/')\r\n        .then((res) => {\r\n          return res.data\r\n        })\r\n        .catch((error) => {\r\n          eventBus.$emit('noresponse', error)\r\n        })\r\n    },\r\n    selectNone() {\r\n      this.formData.options_array.length = this.preview_list.length = 1\r\n    },\r\n    addOption() {\r\n      if (!this.formData.options_array) this.formData.options_array = []\r\n      this.formData.options_array.push({})\r\n      //this.preview_list[id] = []\r\n    },\r\n    dropOption(id) {\r\n      this.formData.options_array.splice(id, 1);\r\n      this.preview_list.splice(id, 1);\r\n    },\r\n    previewImage(event) {\r\n      var input = event.target;\r\n      this.formData.preview = input.files[0]\r\n\r\n      if (input.files) {\r\n        var reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          this.preview = e.target.result;\r\n        }\r\n        reader.readAsDataURL(input.files[0]);\r\n      }\r\n    },\r\n    previewMultiImage(id, event) {\r\n      var input = event.target;\r\n      var count = input.files.length;\r\n      var index = 0;\r\n      //this.formData.preview = input.files[0]\r\n      if (!this.preview_list) this.preview_list = []\r\n      if (!this.preview_list[id]) this.preview_list[id] = []\r\n\r\n      if (!this.formData.options_array[id].photos) this.formData.options_array[id].photos = []\r\n\r\n      if (input.files) {\r\n        while (count--) {\r\n          var reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            this.preview_list[id].push(e.target.result);\r\n          }\r\n          this.formData.options_array[id].photos.push(input.files[index]);\r\n          reader.readAsDataURL(input.files[index]);\r\n          index++;\r\n        }\r\n      }\r\n    },\r\n    dropFile(id, index) {\r\n      this.formData.options_array[id].photos?.splice(index, 1);\r\n      this.preview_list[id]?.splice(index, 1);\r\n\r\n    },\r\n    addNewPost() {\r\n      eventBus.$emit('addNewPost')\r\n    },\r\n    changeP(e) {\r\n      this.formData.category_name = e.target.value\r\n    },\r\n    closeModal() {\r\n      eventBus.$emit('closeModal')\r\n    },\r\n    constractFromData(isEdit) {\r\n      if (!this.formData.title || !this.$refs.postTextEditor.getHTML())\r\n        throw new Error()\r\n\r\n      var formData = new FormData()\r\n\r\n      formData.append('title', this.formData.title)\r\n      formData.append('price', this.formData.price)\r\n      this.formData.sale_count && formData.append('saleCount', this.formData.sale_count)\r\n      this.formData.sale_price && formData.append('salePrice', this.formData.sale_price)\r\n\r\n      this.formData.select_name && formData.append('select_name', this.formData.select_name)\r\n\r\n\r\n      this.formData.preview && formData.append(`preview`, this.formData.preview);\r\n\r\n      formData.append(`puffs_count`, this.formData.puffs_count);\r\n      formData.append(`taste_strength`, this.formData.taste_strength);\r\n\r\n      const turndownService = new TurndownService({\r\n        headingStyle: \"atx\",\r\n      })\r\n      formData.append(\r\n        'description',\r\n        turndownService.turndown(this.$refs.postTextEditor.getHTML()),\r\n      )\r\n\r\n      this.formData.options_array?.forEach((option, index) => {\r\n        option.photos?.forEach(photo => {\r\n          formData.append(`photos[${index}][]`, photo);\r\n        })\r\n\r\n      });\r\n\r\n      this.formData.category_name &&\r\n        formData.append('categoryName', this.formData.category_name)\r\n\r\n      formData.append('options_array', JSON.stringify(this.formData.options_array))\r\n\r\n      isEdit && formData.append('id', this.formData.id)\r\n\r\n      return formData\r\n    },\r\n    addNewing() {\r\n      try {\r\n        const formData = this.constractFromData()\r\n\r\n        myApi\r\n          .post(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postAdded')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n    editNewing() {\r\n      try {\r\n        const formData = this.constractFromData(true)\r\n\r\n        myApi\r\n          .put(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': `multipart/form-data`,\r\n\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postEdited')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        console.log(e)\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .hidden {\r\n  display: none;\r\n}\r\n\r\n::v-deep .ql-toolbar.ql-snow {\r\n  display: block !important;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dddddd;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table th {\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  background: #efefef;\r\n  border: 1px solid #dddddd;\r\n}\r\n\r\n.table td {\r\n  border: 1px solid #dddddd;\r\n  padding: 5px;\r\n  position: relative;\r\n\r\n  .btn.btn-secondary {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n  }\r\n}\r\n\r\n.add-button {\r\n  margin: 0;\r\n}\r\n\r\n.preview-container {\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n\r\n  &>div {\r\n    max-width: 24%;\r\n    position: relative;\r\n\r\n    button {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n.tags-cloud,\r\n.projects-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  &>* {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &>span {\r\n    flex: 0 0 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n</style>\r\n","function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (window.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))[\\s\\S]*?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = merge({}, pack);\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { render } from \"./AddItemModal.vue?vue&type=template&id=428a247e&scoped=true\"\nimport script from \"./AddItemModal.vue?vue&type=script&lang=js\"\nexport * from \"./AddItemModal.vue?vue&type=script&lang=js\"\n\nimport \"./AddItemModal.vue?vue&type=style&index=0&id=428a247e&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-vapeshop\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-428a247e\"]])\n\nexport default __exports__","import { render } from \"./Items.vue?vue&type=template&id=2bd5a2a8\"\nimport script from \"./Items.vue?vue&type=script&lang=js\"\nexport * from \"./Items.vue?vue&type=script&lang=js\"\n\nimport \"./Items.vue?vue&type=style&index=0&id=2bd5a2a8&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-vapeshop\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["options","year","month","day","module","exports","dateFormatter","date","Date","toLocaleDateString","getAgeStr","months","Math","trunc","_createElementVNode","class","_createVNode","_component_CRow","_component_CCol","md","_component_CCard","_component_CCardHeader","$props","_component_CCardBody","_component_CTable","align","hover","responsive","_component_CTableHead","color","_component_CTableRow","_createElementBlock","_Fragment","$data","f","_createBlock","_component_CTableHeaderCell","key","name","order","onClick","$options","title","_component_CTableBody","row","i","column","j","_component_CTableDataCell","id","_component_CFormInput","_hoisted_3","_component_CButton","size","info","_ctx","_component_CPagination","_component_CPaginationItem","disabled","props","type","String","fields","actions","rows","postData","Function","default","updateRow","editMode","lastPageNumber","Number","getPageCount","data","fieldsTransformed","perPage","page","updatingId","formData","orderDesc","currentOrder","async","this","map","el","methods","chooseAction","rowId","console","log","action","length","previousPage","toPage","n","firstPage","lastPage","changeOrder","field","editRow","transformData","transformDataEl","pair","pairFormed","children","split","e","forEach","c","substr","push","__exports__","render","_component_AddItemModal","visible","mode","onChange","placeholder","_component_Table","_component_CModal","backdrop","alignment","onClose","_component_CForm","novalidate","validated","ref","onSubmit","style","_component_CModalHeader","_component_CModalTitle","_component_CModalBody","feedbackValid","feedbackInvalid","required","label","puffs_count","taste_strength","accept","_hoisted_1","src","_hoisted_4","project","_component_CFormCheck","checked","category_name","value","price","number","_hoisted_5","sale_count","sale_price","_hoisted_7","_hoisted_8","select_name","onInput","options_array","option","table_name","stock","multiple","$event","_hoisted_9","item","index","_component_QuillEditor","theme","toolbar","_component_CModalFooter","extend","destination","arguments","source","hasOwnProperty","repeat","character","count","Array","join","trimLeadingNewlines","string","replace","trimTrailingNewlines","indexEnd","substring","blockElements","isBlock","node","is","voidElements","isVoid","hasVoid","has","meaningfulWhenBlankElements","isMeaningfulWhenBlank","hasMeaningfulWhenBlank","tagNames","indexOf","nodeName","getElementsByTagName","some","tagName","rules","cleanAttribute","attribute","Rules","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","findRule","rule","filterValue","filter","toLowerCase","isArray","TypeError","call","collapseWhitespace","element","isPre","firstChild","prevText","keepLeadingWs","prev","next","nodeType","text","test","remove","nextNode","nextSibling","parentNode","removeChild","current","paragraph","content","lineBreak","br","heading","hLevel","charAt","headingStyle","underline","blockquote","list","parent","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","prototype","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","match","className","language","code","fenceChar","fence","fenceSize","fenceInCodeRegex","RegExp","exec","horizontalRule","hr","inlineLink","linkStyle","href","referenceLink","reference","linkReferenceStyle","references","append","emphasis","trim","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","delimiter","matches","image","alt","titlePart","add","unshift","keep","forNode","isBlank","fn","root","window","canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","createHTMLParser","shouldUseActiveX","doc","ActiveXObject","designMode","open","write","close","document","implementation","createHTMLDocument","useActiveX","_htmlParser","HTMLParser","RootNode","input","htmlParser","getElementById","cloneNode","preformattedCode","isPreOrCode","Node","isCode","flankingWhitespace","leading","trailing","edges","edgeWhitespace","leadingAscii","isFlankedByWhitespace","leadingNonAscii","trailingAscii","trailingNonAscii","m","side","sibling","regExp","isFlanked","nodeValue","reduce","escapes","TurndownService","defaults","outerHTML","process","self","childNodes","output","escape","replacementForNode","postProcess","whitespace","s1","s2","nls","max","separator","canConvert","turndown","use","plugin","addRule","accumulator","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","unescapeTest","unescape","_","fromCharCode","parseInt","caret","edit","regex","opt","obj","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","merge","target","Object","splitCells","tableRow","offset","str","escaped","curr","cells","shift","pop","splice","invert","l","suffLen","currChar","slice","findClosingBracket","b","level","checkSanitizeDeprecation","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","state","inLink","token","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","Tokenizer","constructor","space","block","newline","fences","lang","inline","_escapes","trimmed","depth","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","items","itemRegex","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","trimRight","top","spacers","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","header","k","lheading","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","static","lex","lastToken","cutSrc","lastParagraphClipped","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","startatt","listitem","checkbox","tablerow","tablecell","flags","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","marked","callback","done","err","pending","setTimeout","onError","message","Promise","all","then","catch","setOptions","args","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","values","concat","lexInline","myApi","axios","withCredentials","components","QuillEditor","validator","description","preview","image_list","tags_array","Set","formValid","preview_list","updated","$refs","postTextEditor","pasteHTML","replaceAll","$store","publicPath","optionIndex","photos","preview_name","projects","getProjects","get","res","eventBus","selectNone","addOption","dropOption","previewImage","event","files","reader","FileReader","onload","readAsDataURL","previewMultiImage","dropFile","addNewPost","changeP","closeModal","constractFromData","isEdit","getHTML","FormData","turndownService","photo","JSON","stringify","addNewing","post","headers","editNewing","put","credentials","AddItemModal","Table","formVisible","dataActions","Дублировать","duble","Изменить","change","Удалить","delete","tableFieldNames","created","formMode","category","$route","params","categoryName","elObj","v","options_object","options_object_backside","material","is_backside","take","tagsArray","undefined","searchQuery","confirm"],"sourceRoot":""}