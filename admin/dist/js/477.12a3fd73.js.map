{"version":3,"file":"js/477.12a3fd73.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/utils/dateFormatter.js","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue?7a8d","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Order.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Order.vue?7012"],"sourcesContent":["let options = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n};\r\n\r\nmodule.exports = {\r\n  dateFormatter: (date) => {\r\n    return new Date(date).toLocaleDateString('ru-RU', options);\r\n  },\r\n  getAgeStr(months) {\r\n    return months > 12 ? `${Math.trunc(months / 12)} лет ${months % 12} месяцев` : `${months} месяцев`;\r\n  },\r\n};\r\n","<template>\r\n  <CRow>\r\n    <CCol :md=\"12\">\r\n      <CCard class=\"mb-4\">\r\n        <CCardHeader> {{ name }} </CCardHeader>\r\n        <CCardBody>\r\n          <CTable align=\"middle\" class=\"mb-0 border\" hover responsive>\r\n            <CTableHead color=\"light\">\r\n              <CTableRow>\r\n                <CTableHeaderCell v-for=\"f in   fieldsTransformed  \" :key=\"f.name + 'header'\" class=\"text-center\"\r\n                  :class=\"[f.order ? 'orderable' : '']\" @click=\"changeOrder(f)\">{{ f.title }}\r\n                  <div class=\"order-toggle\">tgl</div>\r\n                </CTableHeaderCell>\r\n                <CTableHeaderCell class=\"text-center\">Действия</CTableHeaderCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              <CTableRow v-for=\"(  row, i  ) in   transformData(rows)  \" :key=\"i + 'row'\">\r\n                <CTableDataCell v-for=\"(  column, j  ) in   row  \" :key=\"j + 'row'\" class=\"text-center\">\r\n                  <CFormInput v-if=\"updatingId === rows[i]?.id\" v-model=\"formData[fields[j]?.name]\" />\r\n                  <span v-else>{{ column }}</span>\r\n                </CTableDataCell>\r\n                <CTableDataCell>\r\n                  <div class=\"d-grid gap-2 d-md-flex justify-content-md-center\">\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'primary'\" size=\"md\" @click=\"editRow(i)\">\r\n                      Сохранить</CButton>\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'light'\" size=\"md\" @click=\"updatingId = false\">\r\n                      Отменить</CButton>\r\n                    <CButton v-else v-for=\"(  info, name  ) in   actions  \" :key=\"name + 'action'\" :color=\"info?.color\"\r\n                      size=\"sm\" @click=\"chooseAction(name, info, i, j, column)\">{{ name }}</CButton>\r\n                  </div>\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n              <CTableRow> </CTableRow>\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  </CRow>\r\n  <CPagination aria-label=\"Page navigation example\">\r\n    <CPaginationItem v-if=\"lastPageNumber\" @click=\"firstPage\">В начало</CPaginationItem>\r\n    <CPaginationItem @click=\"previousPage\">Назад</CPaginationItem>\r\n    <CPaginationItem disabled>{{ page }}</CPaginationItem>\r\n    <CPaginationItem @click=\"nextPage\">Вперед</CPaginationItem>\r\n    <CPaginationItem v-if=\"lastPageNumber\" @click=\"lastPage\">В конец</CPaginationItem>\r\n  </CPagination>\r\n</template>\r\n\r\n<script>\r\nimport { dateFormatter } from '../utils/dateFormatter';\r\n\r\nexport default {\r\n  props: {\r\n    name: {\r\n      type: String,\r\n    },\r\n    fields: [],\r\n    actions: [],\r\n    rows: [],\r\n    postData: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    updateRow: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    editMode: {\r\n      type: String,\r\n      default: 'inline',\r\n    },\r\n    lastPageNumber: Number,\r\n    getPageCount: Function\r\n  },\r\n  data() {\r\n    return {\r\n      fieldsTransformed: [],\r\n      perPage: 10,\r\n      page: 1,\r\n      updatingId: false,\r\n      formData: {},\r\n      orderDesc: false,\r\n      currentOrder: \"id\",\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.fieldsTransformed = this.fields.map((el) => {\r\n      if (typeof el === 'object') el.title = el.title ?? el.name\r\n      else el = { name: el }\r\n      return el;\r\n    })\r\n\r\n    await this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    await this.getPageCount()\r\n  },\r\n  methods: {\r\n    dateFormatter,\r\n    chooseAction(name, info, rowId) {\r\n      if (!info) return\r\n      console.log(name === 'Изменить' && this.editMode === 'inline', rowId)\r\n      if (name === 'Изменить' && this.editMode === 'inline') {\r\n        this.updatingId = this.rows[rowId]?.id\r\n        this.formData = this.rows[rowId]\r\n      } else info?.action(this.rows[rowId])\r\n    },\r\n    async nextPage() {\r\n      const data = await this.postData(this.perPage, this.page + 1, this.currentOrder, this.orderDesc)\r\n      if (data?.length > 0) this.page++\r\n    },\r\n    previousPage() {\r\n      if (this.page > 1) this.page--\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    toPage(n) {\r\n      this.page = n\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    firstPage() {\r\n      this.page = 1\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    lastPage() {\r\n      this.page = this.lastPageNumber\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    changeOrder(field) {\r\n      this.page = 1;\r\n      if (this.currentOrder === field.name) this.orderDesc = !this.orderDesc\r\n      else this.currentOrder = field.name\r\n      this.postData(this.perPage, this.page, this.currentOrder, this.orderDesc)\r\n    },\r\n    editRow(i) {\r\n      this.updatingId = false\r\n      this.updateRow(this.rows[i]?.id, this.formData)\r\n    },\r\n    transformData(data) {\r\n      return data?.map(this.transformDataEl)\r\n    },\r\n    transformDataEl(pair) {\r\n      let pairFormed = []\r\n      for (let f of this.fields) {\r\n        const children = f.name.split('.') ?? f.split('.')\r\n        let e = pair\r\n        children?.forEach((c) => (e = e?.[c]))\r\n\r\n        if (f?.name === 'creation_date' || f?.name === 'publication_date') e = dateFormatter(e)\r\n\r\n        if (f?.name === 'text') e = e.substr(0, 100)\r\n\r\n        pairFormed.push(e ?? '')\r\n      }\r\n      return pairFormed\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.btn-md {\r\n  margin: 0;\r\n}\r\n\r\nth:not(.orderable)>.order-toggle {\r\n  display: hidden;\r\n}\r\n</style>\r\n","import { render } from \"./Table.vue?vue&type=template&id=a50bd23c\"\nimport script from \"./Table.vue?vue&type=script&lang=js\"\nexport * from \"./Table.vue?vue&type=script&lang=js\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=a50bd23c&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-vapeshop\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"card mb-4 order-card\">\r\n            <div>\r\n                ID: {{ order.id }}\r\n            </div>\r\n            <div>\r\n                Создан: {{ dateFormatter(order.creation_date) }}\r\n            </div>\r\n            <div>\r\n                Телеграм: {{ order.username ? `@${order.username}` : \"Нет\" }}\r\n            </div>\r\n            <div>\r\n                Телеграм ID: {{ order.user_id }}\r\n            </div>\r\n            <div>\r\n                Доставка: {{ order.selected_dm }}\r\n            </div>\r\n            <div>\r\n                Адрес доставки: {{ order.address }}\r\n            </div>\r\n            <div>\r\n                Почтовый индекс: {{ order.postal_code }}\r\n            </div>\r\n            <div>\r\n                ФИО получателя: {{ `${order.surname} ${order.name} ${order.patronymic}` }}\r\n            </div>\r\n            <div>\r\n                Телефон: {{ order.phone }}\r\n            </div>\r\n            <div>\r\n                Метод оплаты: {{ order.selected_po }}\r\n            </div>\r\n            <div>\r\n                Комментарий: {{ order.comment }}\r\n            </div>\r\n            <div class=\"reciept-container\" v-if=\"order.selected_po === 'Перевод'\">\r\n                <img :src=\"order.reciept_photo_link\" width=\"480\" />\r\n            </div>\r\n            <div>\r\n                Стоимость доставки: {{ order.delivery_price !== null ? order.delivery_price : \"Не учтена\" }}\r\n            </div>\r\n            <div>\r\n                Промокод: {{ order.promo_code ? `${order.promo_code} на ${order.promo_sum}${order.promo_type === 'money' ?\r\n                    'руб.' : '%'}` : 'Нет' }}\r\n            </div>\r\n            <div>\r\n                Сумма заказа: {{ order.total }}\r\n            </div>\r\n            <div>\r\n                Статус: {{ order.status }}\r\n            </div>\r\n            <div class=\"change-status\">\r\n                <span class=\"w-100 mb-2\">Изменить статус</span>\r\n                <button v-for=\"status in statuses\" :key=\"status\" class=\"btn btn-primary\" @click=\"changeStatus(status)\">{{\r\n                    status }}</button>\r\n\r\n            </div>\r\n            <div class=\"send-message\">\r\n                <span class=\"w-100 mb-2\">Отправить сообщение клиенту</span>\r\n                <CInputGroup class=\"mb-2\">\r\n                    <CFormInput class=\"custon-input-part\" placeholder=\"Напишите сообщение\" aria-label=\"Напишите сообщение\"\r\n                        aria-describedby=\"button-sendmessage\" v-model=\"messageTemplate\" />\r\n                    <CButton type=\"button\" color=\"primary\" variant=\"outline\" id=\"button-sendmessage\" @click=\"sendMessage\">\r\n                        Отправить\r\n                    </CButton>\r\n                </CInputGroup>\r\n            </div>\r\n        </div>\r\n        <Table :fields=\"tableFieldNames\" :postData=\"get\" :actions=\"dataActions\" :rows=\"rows\" editMode=\"form\"\r\n            name=\"Позиции\" />\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport Table from '@/components/Table.vue'\r\nimport eventBus from '../eventBus'\r\nimport { dateFormatter } from '../utils/dateFormatter';\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n    withCredentials: true,\r\n    credentials: 'include'\r\n\r\n})\r\n\r\nexport default {\r\n    components: {\r\n        Table,\r\n    },\r\n    props: ['orderId'],\r\n    data() {\r\n        return {\r\n            myApi: myApi,\r\n            formVisible: false,\r\n            formData: {},\r\n            order: {},\r\n            rows: [],\r\n            statuses: [\r\n                \"Новый\",\r\n                \"Оплачен\",\r\n                \"В обработке\",\r\n                \"Доставляется\",\r\n                \"Доставлен\",\r\n                \"Завершен\",\r\n                \"Отменен\",],\r\n            messageTemplate: null,\r\n            tableFieldNames: [\r\n                {\r\n                    name: 'id',\r\n                    title: 'Артикул',\r\n                },\r\n                {\r\n                    name: 'title',\r\n                    title: 'Название',\r\n                },\r\n                {\r\n                    name: 'option_name',\r\n                    title: 'Опция',\r\n                },\r\n                {\r\n                    name: 'count',\r\n                    title: 'Количество',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        change(elObj) {\r\n            this.formVisible = true\r\n            elObj.tags_array = new Set(elObj.tags_array)\r\n            this.formData = elObj\r\n            console.log(elObj)\r\n            this.formMode = 'edit'\r\n        },\r\n        dateFormatter,\r\n        changeStatus(newStatus) {\r\n            this.$store.state.myApi.put(this.$store.state.publicPath + '/api/admin/orders', {\r\n                id: this.order.id,\r\n                status: newStatus,\r\n            })\r\n                .then(async () => {\r\n                    this.order.status = newStatus;\r\n                })\r\n                .catch(e => { eventBus.$emit('noresponse', e) })\r\n        },\r\n        sendMessage() {\r\n            this.$store.state.myApi.post(this.$store.state.publicPath + '/api/admin/messages', {\r\n                user_id: this.order.user_id,\r\n                text: this.messageTemplate\r\n            })\r\n                .then(async () => {\r\n                    this.messageTemplate = null;\r\n                    alert(\"Сообщение успешно отправлено\")\r\n                })\r\n                .catch(e => { eventBus.$emit('noresponse', e) })\r\n        },\r\n        get(take, page) {\r\n            console.log(this.tag)\r\n            return myApi\r\n                .get(this.$store.state.publicPath + '/api/admin/orders/', {\r\n                    params: {\r\n                        take: take ?? 10,\r\n                        page: page ?? 1,\r\n                        id: this.$route.params.orderId,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    res.data.items = res.data.items?.map(el => {\r\n                        if (el.mainside_id) el.title = `${el.title} (обр - ${el.mainside_id})`;\r\n                        return el\r\n                    })\r\n                    if (res.data.items?.length > 0) this.rows = res.data.items\r\n                    this.order = res.data\r\n                })\r\n                .catch((error) => {\r\n                    eventBus.$emit('noresponse', error)\r\n                    return false\r\n                })\r\n        },\r\n    },\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\">\r\nbutton {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.order-card {\r\n    padding: 1rem;\r\n    font-size: 1.2rem;\r\n\r\n    button {\r\n        margin-bottom: 0 !important;\r\n    }\r\n}\r\n\r\n.change-status {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    button {\r\n        width: 150px;\r\n        margin-right: 20px;\r\n        margin-bottom: 20px !important;\r\n    }\r\n}\r\n\r\n.custon-input-part {\r\n    height: 38px !important\r\n}\r\n</style>\r\n  ","import { render } from \"./Order.vue?vue&type=template&id=7dfda02a\"\nimport script from \"./Order.vue?vue&type=script&lang=js\"\nexport * from \"./Order.vue?vue&type=script&lang=js\"\n\nimport \"./Order.vue?vue&type=style&index=0&id=7dfda02a&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-vapeshop\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["options","year","month","day","module","exports","dateFormatter","date","Date","toLocaleDateString","getAgeStr","months","Math","trunc","_createElementVNode","class","_createVNode","_component_CRow","_component_CCol","md","_component_CCard","_component_CCardHeader","$props","_component_CCardBody","_component_CTable","align","hover","responsive","_component_CTableHead","color","_component_CTableRow","_createElementBlock","_Fragment","$data","f","_createBlock","_component_CTableHeaderCell","key","name","order","onClick","$options","title","_component_CTableBody","row","i","column","j","_component_CTableDataCell","id","_component_CFormInput","_hoisted_3","_component_CButton","size","info","_ctx","_component_CPagination","_component_CPaginationItem","disabled","props","type","String","fields","actions","rows","postData","Function","default","updateRow","editMode","lastPageNumber","Number","getPageCount","data","fieldsTransformed","perPage","page","updatingId","formData","orderDesc","currentOrder","async","this","map","el","methods","chooseAction","rowId","console","log","action","length","previousPage","toPage","n","firstPage","lastPage","changeOrder","field","editRow","transformData","transformDataEl","pair","pairFormed","children","split","e","forEach","c","substr","push","__exports__","render","_hoisted_1","creation_date","username","user_id","selected_dm","address","postal_code","surname","patronymic","phone","selected_po","comment","_hoisted_2","src","reciept_photo_link","width","delivery_price","promo_code","promo_sum","promo_type","total","status","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_component_CInputGroup","placeholder","variant","_component_Table","myApi","axios","withCredentials","credentials","components","Table","formVisible","statuses","messageTemplate","tableFieldNames","created","change","elObj","tags_array","Set","formMode","changeStatus","newStatus","$store","state","put","publicPath","then","catch","eventBus","sendMessage","post","text","alert","get","take","tag","params","$route","orderId","res","items","mainside_id","error"],"sourceRoot":""}