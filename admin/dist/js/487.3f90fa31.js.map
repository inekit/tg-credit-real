{"version":3,"file":"js/487.3f90fa31.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/views/Items.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddItemModal.vue","webpack://@coreui/coreui-free-vue-admin-template/./node_modules/turndown/lib/turndown.browser.es.js","webpack://@coreui/coreui-free-vue-admin-template/./node_modules/marked/lib/marked.esm.js","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddItemModal.vue?860e","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Items.vue?bb6c"],"sourcesContent":["<template>\r\n  <div>\r\n    <AddItemModal :visible=\"formVisible\" :formData=\"formData\" :mode=\"formMode\" />\r\n    <Table :fields=\"tableFieldNames\" :postData=\"get\" :actions=\"dataActions\" :rows=\"rows\" editMode=\"form\" name=\"Позиции\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddItemModal from '@/components/AddItemModal.vue'\r\nimport Table from '@/components/Table.vue'\r\nimport eventBus from '../eventBus'\r\n\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n  credentials: 'include'\r\n\r\n})\r\n\r\nexport default {\r\n  components: {\r\n    AddItemModal,\r\n    Table,\r\n  },\r\n  props: ['tag', 'project'],\r\n  data() {\r\n    return {\r\n      myApi: myApi,\r\n      formVisible: false,\r\n      formData: {},\r\n      rows: [],\r\n      dataActions: {\r\n        Дублировать: { action: this.duble, color: 'primary' },\r\n        Изменить: { action: this.change, color: 'warning' },\r\n        Удалить: { action: this.delete, color: 'danger' },\r\n      },\r\n      tableFieldNames: [\r\n        {\r\n          name: 'title',\r\n          title: 'Название',\r\n        },\r\n        {\r\n          name: 'description',\r\n          title: 'Описание',\r\n        },\r\n        {\r\n          name: 'publication_date',\r\n          title: 'Дата добавления',\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  created() {\r\n    eventBus.$on('addNewPost', () => {\r\n      this.formMode = 'new'\r\n      this.formData = {\r\n        category: this.$route.params.categoryName,\r\n      }\r\n      this.formVisible = true\r\n    })\r\n    eventBus.$on('closeModal', () => {\r\n      this.formVisible = false\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postAdded', () => {\r\n      this.formVisible = false\r\n      //this.rows.unshift(this.formData)\r\n      this.get()\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postEdited', () => {\r\n      this.formVisible = false\r\n      this.get()\r\n      this.formData = {}\r\n    })\r\n  },\r\n  methods: {\r\n    change(elObj) {\r\n      this.formVisible = true\r\n      elObj.tags_array = new Set(elObj.tags_array)\r\n      this.formData = elObj\r\n      console.log(elObj)\r\n      this.formMode = 'edit'\r\n    },\r\n    constractFromData(elObj) {\r\n      var formData = new FormData()\r\n\r\n      formData.append('title', elObj.title)\r\n      formData.append('description', elObj.description)\r\n      elObj.image_list?.forEach(v => {\r\n        formData.append('images[]', v);\r\n      });\r\n      elObj.category_name &&\r\n        formData.append('categoryName', elObj.category_name)\r\n\r\n      const options_object = {};\r\n      const options_object_backside = {};\r\n      elObj.options_array = elObj.options_array?.\r\n        filter(({ material, price, size }) => !material && !size && !price ? false : true)\r\n\r\n      for (let { size, material, price, is_backside } of elObj.options_array) {\r\n        if (!is_backside) {\r\n          options_object[material] ? options_object[material][size] = price :\r\n            options_object[material] = { [size]: price }\r\n\r\n          options_object_backside[material] ? options_object_backside[material][size] = options_object_backside[material][size] ?? null :\r\n            options_object_backside[material] = { [size]: null }\r\n        }\r\n        else {\r\n          options_object_backside[material] ? options_object_backside[material][size] = price :\r\n            options_object_backside[material] = { [size]: price }\r\n\r\n          options_object[material] ? options_object[material][size] = options_object[material][size] ?? null :\r\n            options_object[material] = { [size]: null }\r\n\r\n        }\r\n      }\r\n\r\n      formData.append('optionsObject', JSON.stringify(options_object))\r\n      formData.append('optionsObjectBackside', JSON.stringify(options_object_backside))\r\n\r\n      return formData\r\n    },\r\n    duble(elObj) {\r\n      try {\r\n        const formData = this.constractFromData(elObj)\r\n\r\n        myApi\r\n          .post(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postAdded')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n      }\r\n    },\r\n    get(take, page) {\r\n      console.log(this.tag)\r\n      return myApi\r\n        .get(this.$store.state.publicPath + '/api/admin/items/', {\r\n          params: {\r\n            take: take ?? 10,\r\n            page: page ?? 1,\r\n            tagsArray: this.$route.params.tag\r\n              ? [this.$route.params.tag]\r\n              : undefined,\r\n            category: this.$route.params.categoryName,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.data?.length > 0) this.rows = res.data\r\n          return res.data\r\n        })\r\n        .catch((error) => {\r\n          eventBus.$emit('noresponse', error)\r\n          return false\r\n        })\r\n    },\r\n    delete(item) {\r\n      const result = confirm('Вы действительно хотите удалить позицию из каталога?')\r\n      if (result)\r\n        return myApi\r\n          .delete(this.$store.state.publicPath + '/api/admin/items/', {\r\n            data: { id: item.id },\r\n          })\r\n          .then(() => {\r\n            this.get()\r\n            eventBus.$emit('postDeleted')\r\n          })\r\n          .catch((error) => {\r\n            eventBus.$emit('noresponse', error)\r\n          })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nbutton {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","<template>\r\n  <CButton color=\"primary\" @click=\"addNewPost\">Добавить товар</CButton>\r\n  <CModal size=\"xl\" backdrop=\"static\" alignment=\"center\" :visible=\"visible\" @close=\"closeModal\">\r\n    <CForm novalidate :validated=\"formValid\" ref=\"add-file-form\" @change=\"wregert\"\r\n      @submit.prevent=\"mode === 'new' ? addNewing() : editNewing()\" class=\"add-user\" style=\"display: 'none'\">\r\n      <CModalHeader>\r\n        <CModalTitle>{{\r\n          mode === 'new' ? 'Добавить товар' : 'Редактировать товар'\r\n        }}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CFormInput class=\"mb-3\" v-model=\"formData.title\" placeholder=\"Заголовок\" id=\"inputHeader\"\r\n          aria-describedby=\"inputGroupPrepend\" feedbackValid=\"Все ок\" feedbackInvalid=\"Введите корректный заголовок\"\r\n          required />\r\n        <div class=\"projects-list\">\r\n          <span>Категория</span>\r\n          <CFormCheck v-for=\"project in projects\" :key=\"project.name\" :id=\"project.name\"\r\n            :checked=\"project.name === formData.category_name\" @change=\"changeP\" type=\"radio\" name=\"project-name\"\r\n            :value=\"project.name\" :label=\"project.name\" />\r\n          <CFormCheck id=\"null-name\" :checked=\"!formData.category_name\" @change=\"changeP\" type=\"radio\" name=\"project-name\"\r\n            value=\"\" label=\"Без категорий\" />\r\n        </div>\r\n        <CFormInput type=\"number\" class=\"mb-3\" label=\"Цена\" placeholder=\"Введите цену\" v-model.number=\"formData.price\" />\r\n        <div class=\"options-shedle\">\r\n          <span>Опции</span>\r\n          <CFormCheck id=\"project.name\" v-model=\"formData.select_name\" type=\"radio\" name=\"project-name\" value=\"taste\"\r\n            label=\"Вкус\" />\r\n          <CFormCheck id=\"project.name\" v-model=\"formData.select_name\" type=\"radio\" name=\"project-name\" value=\"color\"\r\n            label=\"Цвет\" />\r\n          <CFormCheck id=\"project.name\" v-model=\"formData.select_name\" type=\"radio\" name=\"project-name\" value=\"\"\r\n            label=\"Без опций\" checked />\r\n          <div class=\"option-item\" v-for=\"option, id in formData.options_array\" :key=\"option.id\">\r\n            <CFormInput type=\"text\" class=\"mb-3\" label=\"Название\" placeholder=\"Введите цену\"\r\n              v-model=\"formData.options_array[id].name\" />\r\n            <CFormInput type=\"number\" class=\"mb-3\" label=\"Остаток\" placeholder=\"Введите остаток\"\r\n              v-model=\"formData.options_array[id].stock\" />\r\n            <CFormInput type=\"file\" accept=\"image/*\" multiple=\"multiple\" ref=\"file\"\r\n              @change=\"previewMultiImage(id, $event)\" class=\"mb-3\" label=\"Превью\" placeholder=\"Превью\" />\r\n            <div class=\"border p-2 mt-3 preview-container\">\r\n              <template v-if=\"preview_list?.[id]?.length\">\r\n                <div v-for=\"item, index in preview_list?.[id]\" :key=\"index\">\r\n                  <img :src=\"item\" class=\"img-fluid\" />\r\n                  <button @click.prevent=\"dropFile(id, index)\">Х</button>\r\n                </div>\r\n              </template>\r\n            </div>\r\n          </div>\r\n          <CButton color=\"primary\" type=\"button\" @click=\"formData.options_array.push({})\">Добавить опцию </CButton>\r\n        </div>\r\n\r\n\r\n\r\n        <QuillEditor theme=\"snow\" toolbar=\"essential\" ref=\"postTextEditor\" id=\"postTextEditor\"\r\n          placeholder=\"Краткое описание\" />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" @click=\"closeModal\"> Отменить </CButton>\r\n        <CButton v-show=\"mode === 'new'\" color=\"primary\" type=\"submit\">Добавить</CButton>\r\n        <CButton v-show=\"mode === 'edit'\" color=\"primary\" type=\"submit\">Редактировать</CButton>\r\n      </CModalFooter>\r\n    </CForm>\r\n  </CModal>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n})\r\nimport { QuillEditor } from '@vueup/vue-quill'\r\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\r\nimport TurndownService from 'turndown'\r\nimport { marked } from 'marked'\r\n//import * as DOMPurify from 'dompurify'\r\nimport eventBus from '../eventBus'\r\n\r\nexport default {\r\n  components: { QuillEditor },\r\n  props: {\r\n    mode: {\r\n      required: true,\r\n      type: String,\r\n      validator: (value) => ['new', 'edit'].includes(value.toLowerCase()),\r\n    },\r\n    visible: false,\r\n    formData: {\r\n      title: '',\r\n      text: '',\r\n      description: '',\r\n      preview: '',\r\n      stock: 0,\r\n      price: null,\r\n      category_name: '',\r\n      select_name: \"\",\r\n      image_list: [],\r\n      tags_array: new Set(),\r\n      options_array: [],\r\n    },\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      formValid: false,\r\n      preview_list: [],\r\n    }\r\n  },\r\n  updated() {\r\n    console.log(1)\r\n\r\n    this.formData.options_array = this.formData.options_array?.\r\n      filter(({ material, price, size }) => !material && !size && !price ? false : true)\r\n\r\n    this.formData.description && this.$refs.postTextEditor.pasteHTML(\r\n      marked.parse(this.formData.description?.replaceAll(\"\\r\\n\\r\\n\", \"<span><br/><span/>\\r\\n\\r\\n\")))\r\n\r\n    for (let optionIndex in this.formData.options_array) {\r\n      this.preview_list[optionIndex] = this.formData.options_array[optionIndex].photos?.map(preview_name => `${this.$store.state.publicPath}/public/pics/${preview_name}`)\r\n\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.projects = await this.getProjects()\r\n  },\r\n  methods: {\r\n    async getProjects() {\r\n      return await myApi\r\n        .get(this.$store.state.publicPath + '/api/categories/')\r\n        .then((res) => {\r\n          return res.data\r\n        })\r\n        .catch((error) => {\r\n          eventBus.$emit('noresponse', error)\r\n        })\r\n    },\r\n    previewMultiImage(id, event) {\r\n      var input = event.target;\r\n      var count = input.files.length;\r\n      var index = 0;\r\n      this.formData.preview = input.files[0]\r\n      if (!this.preview_list) this.preview_list = []\r\n      if (!this.preview_list[id]) this.preview_list[id] = []\r\n\r\n      if (!this.formData.options_array[id].photos) this.formData.options_array[id].photos = []\r\n\r\n      if (input.files) {\r\n        while (count--) {\r\n          var reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            this.preview_list[id].push(e.target.result);\r\n          }\r\n          this.formData.options_array[id].photos.push(input.files[index]);\r\n          reader.readAsDataURL(input.files[index]);\r\n          index++;\r\n        }\r\n      }\r\n    },\r\n    dropFile(id, index) {\r\n      this.formData.options_array[id].photos?.splice(index, 1);\r\n      this.preview_list[id]?.splice(index, 1);\r\n\r\n    },\r\n    addNewPost() {\r\n      eventBus.$emit('addNewPost')\r\n    },\r\n    changeP(e) {\r\n      this.formData.category_name = e.target.value\r\n    },\r\n    closeModal() {\r\n      eventBus.$emit('closeModal')\r\n    },\r\n    constractFromData(isEdit) {\r\n      if (!this.formData.title || !this.$refs.postTextEditor.getHTML())\r\n        throw new Error()\r\n\r\n      var formData = new FormData()\r\n\r\n      formData.append('title', this.formData.title)\r\n      formData.append('price', this.formData.price)\r\n      formData.append('select_name', this.formData.select_name)\r\n\r\n\r\n      const turndownService = new TurndownService({\r\n        headingStyle: \"atx\",\r\n        //bulletListMarker: \"-\",\r\n        //fence: \"~~~\",\r\n        //emDelimiter: \"*\",\r\n      })\r\n      formData.append(\r\n        'description',\r\n        turndownService.turndown(this.$refs.postTextEditor.getHTML()),\r\n      )\r\n\r\n      this.formData.image_list?.forEach(v => {\r\n        formData.append('images[]', v);\r\n      });\r\n\r\n      this.formData.category_name &&\r\n        formData.append('categoryName', this.formData.category_name)\r\n\r\n      formData.append('optionsObject', JSON.stringify(this.options_object))\r\n      formData.append('optionsObjectBackside', JSON.stringify(this.options_object_backside))\r\n\r\n\r\n      isEdit && formData.append('id', this.formData.id)\r\n\r\n      return formData\r\n    },\r\n    addNewing() {\r\n      try {\r\n        const formData = this.constractFromData()\r\n\r\n        myApi\r\n          .post(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postAdded')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n    editNewing() {\r\n      try {\r\n        const formData = this.constractFromData(true)\r\n\r\n        myApi\r\n          .put(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': `multipart/form-data`,\r\n\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postEdited')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        console.log(e)\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .hidden {\r\n  display: none;\r\n}\r\n\r\n::v-deep .ql-toolbar.ql-snow {\r\n  display: block !important;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dddddd;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table th {\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  background: #efefef;\r\n  border: 1px solid #dddddd;\r\n}\r\n\r\n.table td {\r\n  border: 1px solid #dddddd;\r\n  padding: 5px;\r\n  position: relative;\r\n\r\n  .btn.btn-secondary {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n  }\r\n}\r\n\r\n.add-button {\r\n  margin: 0;\r\n}\r\n\r\n.preview-container {\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n\r\n  &>div {\r\n    max-width: 24%;\r\n    position: relative;\r\n\r\n    button {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n.tags-cloud,\r\n.projects-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  &>* {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &>span {\r\n    flex: 0 0 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n</style>\r\n","function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (window.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))[\\s\\S]*?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = merge({}, pack);\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { render } from \"./AddItemModal.vue?vue&type=template&id=1eeca6ba&scoped=true\"\nimport script from \"./AddItemModal.vue?vue&type=script&lang=js\"\nexport * from \"./AddItemModal.vue?vue&type=script&lang=js\"\n\nimport \"./AddItemModal.vue?vue&type=style&index=0&id=1eeca6ba&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-vapeshop\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1eeca6ba\"]])\n\nexport default __exports__","import { render } from \"./Items.vue?vue&type=template&id=fce77a8e\"\nimport script from \"./Items.vue?vue&type=script&lang=js\"\nexport * from \"./Items.vue?vue&type=script&lang=js\"\n\nimport \"./Items.vue?vue&type=style&index=0&id=fce77a8e&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-vapeshop\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","_createVNode","_component_AddItemModal","visible","$data","formData","mode","_ctx","_component_Table","fields","postData","$options","actions","rows","editMode","name","class","_createElementVNode","_component_CButton","color","onClick","_component_CModal","size","backdrop","alignment","$props","onClose","_component_CForm","novalidate","validated","ref","onChange","onSubmit","style","_component_CModalHeader","_component_CModalTitle","_component_CModalBody","_component_CFormInput","title","placeholder","id","feedbackValid","feedbackInvalid","required","_hoisted_1","_hoisted_2","_Fragment","project","_createBlock","_component_CFormCheck","key","checked","category_name","type","value","label","price","number","_hoisted_3","_hoisted_4","select_name","options_array","option","stock","accept","multiple","$event","_hoisted_5","length","item","index","src","push","_component_QuillEditor","theme","toolbar","_component_CModalFooter","extend","destination","i","arguments","source","hasOwnProperty","repeat","character","count","Array","join","trimLeadingNewlines","string","replace","trimTrailingNewlines","indexEnd","substring","blockElements","isBlock","node","is","voidElements","isVoid","hasVoid","has","meaningfulWhenBlankElements","isMeaningfulWhenBlank","hasMeaningfulWhenBlank","tagNames","indexOf","nodeName","getElementsByTagName","some","tagName","rules","cleanAttribute","attribute","Rules","options","this","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","findRule","rule","filterValue","filter","toLowerCase","isArray","TypeError","call","collapseWhitespace","element","isPre","firstChild","prevText","keepLeadingWs","prev","next","nodeType","text","data","test","substr","remove","nextNode","nextSibling","parentNode","removeChild","current","paragraph","content","lineBreak","br","heading","hLevel","Number","charAt","headingStyle","underline","blockquote","list","parent","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","prototype","children","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","match","className","language","code","fenceChar","fence","fenceSize","fenceInCodeRegex","RegExp","exec","horizontalRule","hr","inlineLink","linkStyle","href","referenceLink","reference","linkReferenceStyle","references","append","emphasis","trim","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","delimiter","matches","image","alt","titlePart","add","unshift","keep","forNode","isBlank","forEach","fn","root","window","canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","e","createHTMLParser","shouldUseActiveX","doc","ActiveXObject","designMode","open","write","close","document","implementation","createHTMLDocument","useActiveX","_htmlParser","HTMLParser","RootNode","input","htmlParser","getElementById","cloneNode","preformattedCode","isPreOrCode","Node","isCode","flankingWhitespace","leading","trailing","edges","edgeWhitespace","leadingAscii","isFlankedByWhitespace","leadingNonAscii","trailingAscii","trailingNonAscii","m","side","sibling","regExp","isFlanked","nodeValue","reduce","escapes","TurndownService","defaults","outerHTML","process","self","childNodes","output","escape","replacementForNode","postProcess","whitespace","s1","s2","nls","Math","max","separator","canConvert","turndown","use","plugin","addRule","accumulator","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","unescapeTest","unescape","_","n","String","fromCharCode","parseInt","caret","edit","regex","opt","obj","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","merge","target","Object","splitCells","tableRow","row","offset","str","escaped","curr","cells","split","shift","pop","splice","c","invert","l","suffLen","currChar","slice","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","state","inLink","token","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","matchIndentInNode","indentInNode","Tokenizer","constructor","space","block","newline","fences","lang","inline","_escapes","trimmed","depth","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","items","itemRegex","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","trimRight","top","spacers","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","header","align","j","k","lheading","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","static","lex","lastToken","cutSrc","lastParagraphClipped","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","startatt","listitem","checkbox","tablerow","tablecell","flags","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","marked","callback","done","err","pending","setTimeout","onError","message","Promise","all","then","catch","setOptions","args","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","values","concat","lexInline","myApi","axios","withCredentials","components","QuillEditor","props","validator","description","preview","image_list","tags_array","Set","formValid","preview_list","updated","log","material","$refs","postTextEditor","pasteHTML","replaceAll","optionIndex","photos","preview_name","$store","publicPath","projects","getProjects","methods","get","res","eventBus","previewMultiImage","event","files","reader","FileReader","onload","readAsDataURL","dropFile","addNewPost","changeP","closeModal","constractFromData","isEdit","getHTML","FormData","turndownService","v","JSON","stringify","options_object","options_object_backside","addNewing","post","headers","editNewing","put","__exports__","credentials","AddItemModal","Table","formVisible","dataActions","Дублировать","action","duble","Изменить","change","Удалить","delete","tableFieldNames","created","formMode","category","$route","params","categoryName","elObj","is_backside","take","page","tagsArray","undefined","confirm","render"],"sourceRoot":""}